(self.webpackChunkzedux_docs=self.webpackChunkzedux_docs||[]).push([[7611],{1173:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return s},metadata:function(){return l},toc:function(){return c},default:function(){return d}});var o,n=a(4034),r=a(9973),i=(a(7294),a(3905)),s={id:"localAtom",title:"localAtom"},l={unversionedId:"api/factories/localAtom",id:"api/factories/localAtom",isDocsHomePage:!1,title:"localAtom",description:"`ts",source:"@site/docs/api/factories/localAtom.mdx",sourceDirName:"api/factories",slug:"/api/factories/localAtom",permalink:"/zedux/docs/api/factories/localAtom",editUrl:"https://github.com/Omnistac/zedux/tree/master/docs/api/factories/localAtom.mdx",version:"current",frontMatter:{id:"localAtom",title:"localAtom"},sidebar:"react",previous:{title:"ion",permalink:"/zedux/docs/api/factories/ion"},next:{title:"useAtomConsumer",permalink:"/zedux/docs/api/hooks/useAtomConsumer"}},c=[{value:"Example",id:"example",children:[]},{value:"Signature",id:"signature",children:[{value:"<code>key</code>",id:"key",children:[]},{value:"<code>value</code>",id:"value",children:[]},{value:"<code>config</code>",id:"config",children:[]}]}],u=(o="LiveEditor",function(e){return console.warn("Component "+o+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",e)}),m={toc:c};function d(e){var t=e.components,a=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { localAtom } from '@zedux/react'\n")),(0,i.kt)("p",null,"A factory for creating ",(0,i.kt)("a",{parentName:"p",href:"../classes/LocalAtom"},"local atoms"),"."),(0,i.kt)("p",null,"Local atoms are just atoms that have their first param set to an optional string id. Zedux auto-generates an id every time the atom is used, if you don't pass one. Local atoms also always have their ",(0,i.kt)("a",{parentName:"p",href:"../classes/Atom#ttl"},(0,i.kt)("inlineCode",{parentName:"a"},"ttl"))," set to ",(0,i.kt)("inlineCode",{parentName:"p"},"0"),"."),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)(u,{resultVar:"App",mdxType:"LiveEditor"},"\nconst counterAtom = localAtom('counter', () => {\n  const store = injectStore(0)\n\n  return store\n})\n\nfunction App() {\n  const [counter1, setCounter1] = useAtomState(counterAtom)\n  const [counter2, setCounter2] = useAtomState(counterAtom)\n\n  return (\n    <>\n      <div>First state: {counter1}</div>\n      <button onClick={() => setCounter1(state => state + 1)}>Increment</button>\n      <div>Second state: {counter2}</div>\n      <button onClick={() => setCounter2(state => state + 1)}>Increment</button>\n    </>\n  )\n}\n"),(0,i.kt)("h2",{id:"signature"},"Signature"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"localAtom(key, value, config?) => LocalAtom\n")),(0,i.kt)("p",null,"All params are the same as ",(0,i.kt)("a",{parentName:"p",href:"atom"},"the ",(0,i.kt)("inlineCode",{parentName:"a"},"atom()")," factory"),". Just note that the first param of a passed evaluator function should be a string. And ",(0,i.kt)("inlineCode",{parentName:"p"},"ttl")," is set to 0 by default, instead of -1."),(0,i.kt)("h3",{id:"key"},(0,i.kt)("inlineCode",{parentName:"h3"},"key")),(0,i.kt)("p",null,"Required. A string. The key should typically be unique, though there are cases (e.g. for DI) where you won't make them unique. The key identifies the atom in ecosystems where it's used."),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"../classes/Atom#key"},(0,i.kt)("inlineCode",{parentName:"a"},"Atom#key")),"."),(0,i.kt)("h3",{id:"value"},(0,i.kt)("inlineCode",{parentName:"h3"},"value")),(0,i.kt)("p",null,"Required. The value of the atom. See ",(0,i.kt)("a",{parentName:"p",href:"atom#value"},"the ",(0,i.kt)("inlineCode",{parentName:"a"},"atom()")," factory")," for possible values. If an evaluator function is passed, its first parameter should be a string (doesn't have to be an optional param)."),(0,i.kt)("h3",{id:"config"},(0,i.kt)("inlineCode",{parentName:"h3"},"config")),(0,i.kt)("p",null,"Optional. An ",(0,i.kt)("a",{parentName:"p",href:"../types/AtomConfig"},"AtomConfig")," object. If it isn't passed, ",(0,i.kt)("inlineCode",{parentName:"p"},"ttl")," will default to 0, which means the atom instance dies as soon as it has no more dependents."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"atom('key', getter, { ttl: 0 })\n")))}d.isMDXComponent=!0}}]);