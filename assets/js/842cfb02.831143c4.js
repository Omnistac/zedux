"use strict";(self.webpackChunkzedux_docs=self.webpackChunkzedux_docs||[]).push([[1981],{9515:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "assets": function() { return /* binding */ assets; },\n/* harmony export */   "contentTitle": function() { return /* binding */ contentTitle; },\n/* harmony export */   "default": function() { return /* binding */ MDXContent; },\n/* harmony export */   "frontMatter": function() { return /* binding */ frontMatter; },\n/* harmony export */   "metadata": function() { return /* binding */ metadata; },\n/* harmony export */   "toc": function() { return /* binding */ toc; }\n/* harmony export */ });\n/* harmony import */ var _Users_joshuaclaunch_code_oss_zedux_docs_node_modules_babel_runtime_helpers_esm_extends_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(7462);\n/* harmony import */ var _Users_joshuaclaunch_code_oss_zedux_docs_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3366);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7294);\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3905);\nvar _excluded=["components"];/* @jsxRuntime classic */ /* @jsx mdx */ /* @jsxFrag React.Fragment */var frontMatter={id:\'Ion\',title:\'Ion\'};var contentTitle=undefined;var metadata={"unversionedId":"api/classes/Ion","id":"api/classes/Ion","title":"Ion","description":"Extends Atom.","source":"@site/docs/api/classes/Ion.mdx","sourceDirName":"api/classes","slug":"/api/classes/Ion","permalink":"/zedux/docs/api/classes/Ion","draft":false,"editUrl":"https://github.com/Omnistac/zedux/tree/master/docs/api/classes/Ion.mdx","tags":[],"version":"current","frontMatter":{"id":"Ion","title":"Ion"},"sidebar":"react","previous":{"title":"Ecosystem","permalink":"/zedux/docs/api/classes/Ecosystem"},"next":{"title":"MachineStore","permalink":"/zedux/docs/api/classes/MachineStore"}};var assets={};var toc=[{value:\'Creation\',id:\'creation\',level:2},{value:\'See Also\',id:\'see-also\',level:2}];var layoutProps={toc:toc};var MDXLayout="wrapper";function MDXContent(_ref){var components=_ref.components,props=(0,_Users_joshuaclaunch_code_oss_zedux_docs_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(_ref,_excluded);return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(MDXLayout,(0,_Users_joshuaclaunch_code_oss_zedux_docs_node_modules_babel_runtime_helpers_esm_extends_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Extends ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"Atom"},"Atom"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Ions are a specialized atom type. They excel at selector-type operations. The only difference is that an ion\'s ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"../glossary#state-factory"},"state factory")," receives an ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"../types/AtomGetters"},"AtomGetters object")," as its first parameter. All other params work exactly the same as normal atom params."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Unlike atoms, ions ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("em",{parentName:"p"},"must")," be given a state factory function. That\'s the whole point!"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("h2",{"id":"creation"},"Creation"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Create ions using ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"../factories/ion"},"the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"a"},"ion()")," factory"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("code",{parentName:"pre","className":"language-ts"},"import { ion } from \'@zedux/react\'\\n\\nconst selectorAtom = ion(\'selector\', ({ get }) => get(otherAtom).someField)\\nconst derivedAtom = ion(\'derived\', ({ get }) => deriveStuff(get(otherAtom)))\\n\\nconst withParams = ion(\'withParams\', ({ get }, one: string, two: number) => {\\n  return `${one} ${two}`\\n})\\n\\nconst withInjectors = ion(\'withInjectors\', ({ get }) => {\\n  // any injector can be used in the \\"getter\\" function.\\n  const val = injectMemo(() => getExpensiveVal(), [])\\n\\n  return val\\n})\\n\\nconst withConfig = ion(\'withConfig\', stateFactory, {\\n  flags: [\'my-flag\'],\\n  ttl: 0,\\n})\\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Ions expose no unique properties or methods besides those exposed by ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"Atom"},"Atom"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("h2",{"id":"see-also"},"See Also"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"li","href":"Atom"},"the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"a"},"Atom")," class")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"li","href":"../../walkthrough/selectors"},"the Selectors walkthrough"))));};MDXContent.isMDXComponent=true;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LE1BQU0sQ0FBRSw2QkFBNkIsOEJBQ0gsQ0FBSyxDQUN4QyxDQUNPLENBQ2hCLENBQ0EsQ0FDQUQsVUFBVSxDQUFDRyxjQUFjLENBQUcsSUFBSSIsInNvdXJjZXMiOlsid2VicGFjazovL3plZHV4LWRvY3MvLi9kb2NzL2FwaS9jbGFzc2VzL0lvbi5tZHg/NmVkNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbi8qIEBqc3hGcmFnIFJlYWN0LkZyYWdtZW50ICovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0JztcblxuXG5leHBvcnQgY29uc3QgZnJvbnRNYXR0ZXIgPSB7XG5cdGlkOiAnSW9uJyxcblx0dGl0bGU6ICdJb24nXG59O1xuZXhwb3J0IGNvbnN0IGNvbnRlbnRUaXRsZSA9IHVuZGVmaW5lZDtcbmV4cG9ydCBjb25zdCBtZXRhZGF0YSA9IHtcbiAgXCJ1bnZlcnNpb25lZElkXCI6IFwiYXBpL2NsYXNzZXMvSW9uXCIsXG4gIFwiaWRcIjogXCJhcGkvY2xhc3Nlcy9Jb25cIixcbiAgXCJ0aXRsZVwiOiBcIklvblwiLFxuICBcImRlc2NyaXB0aW9uXCI6IFwiRXh0ZW5kcyBBdG9tLlwiLFxuICBcInNvdXJjZVwiOiBcIkBzaXRlL2RvY3MvYXBpL2NsYXNzZXMvSW9uLm1keFwiLFxuICBcInNvdXJjZURpck5hbWVcIjogXCJhcGkvY2xhc3Nlc1wiLFxuICBcInNsdWdcIjogXCIvYXBpL2NsYXNzZXMvSW9uXCIsXG4gIFwicGVybWFsaW5rXCI6IFwiL3plZHV4L2RvY3MvYXBpL2NsYXNzZXMvSW9uXCIsXG4gIFwiZHJhZnRcIjogZmFsc2UsXG4gIFwiZWRpdFVybFwiOiBcImh0dHBzOi8vZ2l0aHViLmNvbS9PbW5pc3RhYy96ZWR1eC90cmVlL21hc3Rlci9kb2NzL2FwaS9jbGFzc2VzL0lvbi5tZHhcIixcbiAgXCJ0YWdzXCI6IFtdLFxuICBcInZlcnNpb25cIjogXCJjdXJyZW50XCIsXG4gIFwiZnJvbnRNYXR0ZXJcIjoge1xuICAgIFwiaWRcIjogXCJJb25cIixcbiAgICBcInRpdGxlXCI6IFwiSW9uXCJcbiAgfSxcbiAgXCJzaWRlYmFyXCI6IFwicmVhY3RcIixcbiAgXCJwcmV2aW91c1wiOiB7XG4gICAgXCJ0aXRsZVwiOiBcIkVjb3N5c3RlbVwiLFxuICAgIFwicGVybWFsaW5rXCI6IFwiL3plZHV4L2RvY3MvYXBpL2NsYXNzZXMvRWNvc3lzdGVtXCJcbiAgfSxcbiAgXCJuZXh0XCI6IHtcbiAgICBcInRpdGxlXCI6IFwiTWFjaGluZVN0b3JlXCIsXG4gICAgXCJwZXJtYWxpbmtcIjogXCIvemVkdXgvZG9jcy9hcGkvY2xhc3Nlcy9NYWNoaW5lU3RvcmVcIlxuICB9XG59O1xuZXhwb3J0IGNvbnN0IGFzc2V0cyA9IHtcblxufTtcblxuXG5leHBvcnQgY29uc3QgdG9jID0gW3tcbiAgdmFsdWU6ICdDcmVhdGlvbicsXG4gIGlkOiAnY3JlYXRpb24nLFxuICBsZXZlbDogMlxufSwge1xuICB2YWx1ZTogJ1NlZSBBbHNvJyxcbiAgaWQ6ICdzZWUtYWxzbycsXG4gIGxldmVsOiAyXG59XTtcblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIHRvY1xufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxwPntgRXh0ZW5kcyBgfTxhIHBhcmVudE5hbWU9XCJwXCIgey4uLntcbiAgICAgICAgXCJocmVmXCI6IFwiQXRvbVwiXG4gICAgICB9fT57YEF0b21gfTwvYT57YC5gfTwvcD5cbiAgICA8cD57YElvbnMgYXJlIGEgc3BlY2lhbGl6ZWQgYXRvbSB0eXBlLiBUaGV5IGV4Y2VsIGF0IHNlbGVjdG9yLXR5cGUgb3BlcmF0aW9ucy4gVGhlIG9ubHkgZGlmZmVyZW5jZSBpcyB0aGF0IGFuIGlvbidzIGB9PGEgcGFyZW50TmFtZT1cInBcIiB7Li4ue1xuICAgICAgICBcImhyZWZcIjogXCIuLi9nbG9zc2FyeSNzdGF0ZS1mYWN0b3J5XCJcbiAgICAgIH19Pntgc3RhdGUgZmFjdG9yeWB9PC9hPntgIHJlY2VpdmVzIGFuIGB9PGEgcGFyZW50TmFtZT1cInBcIiB7Li4ue1xuICAgICAgICBcImhyZWZcIjogXCIuLi90eXBlcy9BdG9tR2V0dGVyc1wiXG4gICAgICB9fT57YEF0b21HZXR0ZXJzIG9iamVjdGB9PC9hPntgIGFzIGl0cyBmaXJzdCBwYXJhbWV0ZXIuIEFsbCBvdGhlciBwYXJhbXMgd29yayBleGFjdGx5IHRoZSBzYW1lIGFzIG5vcm1hbCBhdG9tIHBhcmFtcy5gfTwvcD5cbiAgICA8cD57YFVubGlrZSBhdG9tcywgaW9ucyBgfTxlbSBwYXJlbnROYW1lPVwicFwiPntgbXVzdGB9PC9lbT57YCBiZSBnaXZlbiBhIHN0YXRlIGZhY3RvcnkgZnVuY3Rpb24uIFRoYXQncyB0aGUgd2hvbGUgcG9pbnQhYH08L3A+XG4gICAgPGgyIHsuLi57XG4gICAgICBcImlkXCI6IFwiY3JlYXRpb25cIlxuICAgIH19PntgQ3JlYXRpb25gfTwvaDI+XG4gICAgPHA+e2BDcmVhdGUgaW9ucyB1c2luZyBgfTxhIHBhcmVudE5hbWU9XCJwXCIgey4uLntcbiAgICAgICAgXCJocmVmXCI6IFwiLi4vZmFjdG9yaWVzL2lvblwiXG4gICAgICB9fT57YHRoZSBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJhXCI+e2Bpb24oKWB9PC9pbmxpbmVDb2RlPntgIGZhY3RvcnlgfTwvYT57YC5gfTwvcD5cbiAgICA8cHJlPjxjb2RlIHBhcmVudE5hbWU9XCJwcmVcIiB7Li4ue1xuICAgICAgICBcImNsYXNzTmFtZVwiOiBcImxhbmd1YWdlLXRzXCJcbiAgICAgIH19PntgaW1wb3J0IHsgaW9uIH0gZnJvbSAnQHplZHV4L3JlYWN0J1xuXG5jb25zdCBzZWxlY3RvckF0b20gPSBpb24oJ3NlbGVjdG9yJywgKHsgZ2V0IH0pID0+IGdldChvdGhlckF0b20pLnNvbWVGaWVsZClcbmNvbnN0IGRlcml2ZWRBdG9tID0gaW9uKCdkZXJpdmVkJywgKHsgZ2V0IH0pID0+IGRlcml2ZVN0dWZmKGdldChvdGhlckF0b20pKSlcblxuY29uc3Qgd2l0aFBhcmFtcyA9IGlvbignd2l0aFBhcmFtcycsICh7IGdldCB9LCBvbmU6IHN0cmluZywgdHdvOiBudW1iZXIpID0+IHtcbiAgcmV0dXJuIFxcYFxcJHtvbmV9IFxcJHt0d299XFxgXG59KVxuXG5jb25zdCB3aXRoSW5qZWN0b3JzID0gaW9uKCd3aXRoSW5qZWN0b3JzJywgKHsgZ2V0IH0pID0+IHtcbiAgLy8gYW55IGluamVjdG9yIGNhbiBiZSB1c2VkIGluIHRoZSBcImdldHRlclwiIGZ1bmN0aW9uLlxuICBjb25zdCB2YWwgPSBpbmplY3RNZW1vKCgpID0+IGdldEV4cGVuc2l2ZVZhbCgpLCBbXSlcblxuICByZXR1cm4gdmFsXG59KVxuXG5jb25zdCB3aXRoQ29uZmlnID0gaW9uKCd3aXRoQ29uZmlnJywgc3RhdGVGYWN0b3J5LCB7XG4gIGZsYWdzOiBbJ215LWZsYWcnXSxcbiAgdHRsOiAwLFxufSlcbmB9PC9jb2RlPjwvcHJlPlxuICAgIDxwPntgSW9ucyBleHBvc2Ugbm8gdW5pcXVlIHByb3BlcnRpZXMgb3IgbWV0aG9kcyBiZXNpZGVzIHRob3NlIGV4cG9zZWQgYnkgYH08YSBwYXJlbnROYW1lPVwicFwiIHsuLi57XG4gICAgICAgIFwiaHJlZlwiOiBcIkF0b21cIlxuICAgICAgfX0+e2BBdG9tYH08L2E+e2AuYH08L3A+XG4gICAgPGgyIHsuLi57XG4gICAgICBcImlkXCI6IFwic2VlLWFsc29cIlxuICAgIH19PntgU2VlIEFsc29gfTwvaDI+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPjxhIHBhcmVudE5hbWU9XCJsaVwiIHsuLi57XG4gICAgICAgICAgXCJocmVmXCI6IFwiQXRvbVwiXG4gICAgICAgIH19PntgdGhlIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImFcIj57YEF0b21gfTwvaW5saW5lQ29kZT57YCBjbGFzc2B9PC9hPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+PGEgcGFyZW50TmFtZT1cImxpXCIgey4uLntcbiAgICAgICAgICBcImhyZWZcIjogXCIuLi8uLi93YWxrdGhyb3VnaC9zZWxlY3RvcnNcIlxuICAgICAgICB9fT57YHRoZSBTZWxlY3RvcnMgd2Fsa3Rocm91Z2hgfTwvYT48L2xpPlxuICAgIDwvdWw+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJtZHgiLCJmcm9udE1hdHRlciIsImlkIiwidGl0bGUiLCJjb250ZW50VGl0bGUiLCJ1bmRlZmluZWQiLCJtZXRhZGF0YSIsImFzc2V0cyIsInRvYyIsInZhbHVlIiwibGV2ZWwiLCJsYXlvdXRQcm9wcyIsIk1EWExheW91dCIsIk1EWENvbnRlbnQiLCJjb21wb25lbnRzIiwicHJvcHMiLCJpc01EWENvbXBvbmVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///9515\n')}}]);