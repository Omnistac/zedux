"use strict";(self.webpackChunkzedux_docs=self.webpackChunkzedux_docs||[]).push([[3174],{9918:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return d},default:function(){return u}});var a=r(3117),o=r(102),c=(r(7294),r(3905)),n=["components"],i={id:"createActor",title:"createActor"},p=void 0,s={unversionedId:"api/factories/createActor",id:"api/factories/createActor",isDocsHomePage:!1,title:"createActor",description:"A factory for creating Actors.",source:"@site/docs/api/factories/createActor.mdx",sourceDirName:"api/factories",slug:"/api/factories/createActor",permalink:"/zedux/docs/api/factories/createActor",editUrl:"https://github.com/Omnistac/zedux/tree/master/docs/api/factories/createActor.mdx",tags:[],version:"current",frontMatter:{id:"createActor",title:"createActor"},sidebar:"react",previous:{title:"atom",permalink:"/zedux/docs/api/factories/atom"},next:{title:"createAsyncStore",permalink:"/zedux/docs/api/factories/createAsyncStore"}},d=[{value:"Example",id:"example",children:[],level:2},{value:"Signature",id:"signature",children:[{value:"<code>type</code>",id:"type",children:[],level:3}],level:2}],l={toc:d};function u(e){var t=e.components,r=(0,o.Z)(e,n);return(0,c.kt)("wrapper",(0,a.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},"import { createActor } from '@zedux/react'\n")),(0,c.kt)("p",null,"A factory for creating ",(0,c.kt)("a",{parentName:"p",href:"../types/Actor"},"Actors"),"."),(0,c.kt)("h2",{id:"example"},"Example"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},"import { createActor } from '@zedux/react'\n\ncreateActor('test')('payload') // { type: 'test', payload: 'payload' }\n\ninterface Todo {\n  text: string\n}\n\nconst addTodo = createActor<Todo>('todos/add')\n\nstore.dispatch(addTodo({ text: 'be awesome' }))\n")),(0,c.kt)("h2",{id:"signature"},"Signature"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},"createActor<Payload>(type) => Actor\n")),(0,c.kt)("p",null,"Typescript users will usually want to pass the ",(0,c.kt)("inlineCode",{parentName:"p"},"Payload")," generic, which represents the type the returned actor will accept."),(0,c.kt)("p",null,"Returns an actor function that will return ",(0,c.kt)("a",{parentName:"p",href:"../types/Action"},"action objects")," with their ",(0,c.kt)("inlineCode",{parentName:"p"},"type")," property set to the passed type."),(0,c.kt)("h3",{id:"type"},(0,c.kt)("inlineCode",{parentName:"h3"},"type")),(0,c.kt)("p",null,"Required. The string ",(0,c.kt)("inlineCode",{parentName:"p"},"type")," property of the action objects that the returned actor will create."))}u.isMDXComponent=!0}}]);