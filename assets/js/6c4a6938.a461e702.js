"use strict";(self.webpackChunkzedux_docs=self.webpackChunkzedux_docs||[]).push([[668],{3905:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Zo": function() { return /* binding */ MDXProvider; },\n/* harmony export */   "kt": function() { return /* binding */ createElement; }\n/* harmony export */ });\n/* unused harmony exports MDXContext, useMDXComponents, withMDXComponents */\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7294);\n\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === \'function\';\n};\n\nvar MDXContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = \'mdxType\';\nvar DEFAULTS = {\n  inlineCode: \'code\',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, ["components", "mdxType", "originalType", "parentName"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components["".concat(parentName, ".").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = \'MDXCreateElement\';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === \'string\' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === \'string\' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return react__WEBPACK_IMPORTED_MODULE_0__.createElement.apply(null, createElementArgArray);\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement.apply(null, args);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3905\n')},8911:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "AtomKeyDesc": function() { return /* binding */ AtomKeyDesc; },\n/* harmony export */   "assets": function() { return /* binding */ assets; },\n/* harmony export */   "contentTitle": function() { return /* binding */ contentTitle; },\n/* harmony export */   "default": function() { return /* binding */ MDXContent; },\n/* harmony export */   "frontMatter": function() { return /* binding */ frontMatter; },\n/* harmony export */   "metadata": function() { return /* binding */ metadata; },\n/* harmony export */   "toc": function() { return /* binding */ toc; }\n/* harmony export */ });\n/* harmony import */ var _Users_joshuaclaunch_code_oss_zedux_docs_node_modules_babel_runtime_helpers_esm_extends_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(7462);\n/* harmony import */ var _Users_joshuaclaunch_code_oss_zedux_docs_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3366);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7294);\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3905);\nvar _excluded=["components"];/* @jsxRuntime classic */ /* @jsx mdx */ /* @jsxFrag React.Fragment */var frontMatter={id:\'Atom\',title:\'Atom\'};var contentTitle=undefined;var metadata={"unversionedId":"api/classes/Atom","id":"api/classes/Atom","title":"Atom","description":"The standard, default atom type. Instances of this class are passed to most of Zedux\' hooks and injectors.","source":"@site/docs/api/classes/Atom.mdx","sourceDirName":"api/classes","slug":"/api/classes/Atom","permalink":"/zedux/docs/api/classes/Atom","draft":false,"editUrl":"https://github.com/Omnistac/zedux/tree/master/docs/api/classes/Atom.mdx","tags":[],"version":"current","frontMatter":{"id":"Atom","title":"Atom"},"sidebar":"react","previous":{"title":"Store Composition","permalink":"/zedux/docs/advanced/store-composition"},"next":{"title":"AtomApi","permalink":"/zedux/docs/api/classes/AtomApi"}};var assets={};var toc=[{value:\'Creation\',id:\'creation\',level:2},{value:\'Properties\',id:\'properties\',level:2},{value:\'<code>.key</code>\',id:\'key\',level:3},{value:\'<code>.flags</code>\',id:\'flags\',level:3},{value:\'<code>.forwardPromises</code>\',id:\'forwardpromises\',level:3},{value:\'<code>.maxInstances</code>\',id:\'maxinstances\',level:3},{value:\'<code>.ttl</code>\',id:\'ttl\',level:3},{value:\'Methods\',id:\'methods\',level:2},{value:\'<code>.override</code>\',id:\'override\',level:3},{value:\'<code>newValue</code>\',id:\'newvalue\',level:4},{value:\'Extending\',id:\'extending\',level:2}];var AtomKeyDesc=function AtomKeyDesc(){return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("div",null,"The key is the key to Dependency Injection - it\'s how ecosystems know which atoms to override. It also aids development - many errors will log the key of the atom they originated in. Keys also help with a codebase\'s grepability.");};var layoutProps={toc:toc,AtomKeyDesc:AtomKeyDesc};var MDXLayout="wrapper";function MDXContent(_ref){var components=_ref.components,props=(0,_Users_joshuaclaunch_code_oss_zedux_docs_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(_ref,_excluded);return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(MDXLayout,(0,_Users_joshuaclaunch_code_oss_zedux_docs_node_modules_babel_runtime_helpers_esm_extends_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"The standard, default atom type. Instances of this class are passed to most of Zedux\' hooks and injectors."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"An atom defines a template that Zedux will use to create atom instances. Do not confuse \\"atom instances\\" with instances of this Atom class! Atom instances are actually instances of ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"AtomInstance"},"the AtomInstance class")," \\uD83E\\uDD15. We refer to instances of this Atom class as simply \\"atoms\\"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("h2",{"id":"creation"},"Creation"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Use ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"../factories/atom"},"the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"a"},"atom()")," factory")," to create atoms:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("code",{parentName:"pre","className":"language-ts"},"import { Atom, atom } from \'@zedux/react\'\\n\\nconst exampleAtom = atom(\'example\', \'initial state\')\\n\\nexampleAtom instanceof Atom // true\\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("h2",{"id":"properties"},"Properties"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"This class exposes the following properties:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("h3",{"id":"key"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"h3"},".key")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"A string. Will always be set. This is the first parameter passed to ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"../factories/atom"},"the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"a"},"atom()")," factory"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(AtomKeyDesc,{mdxType:"AtomKeyDesc"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("h3",{"id":"flags"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"h3"},".flags")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"An array of strings. May be undefined. The flags that will be checked alongside an ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"Ecosystem#flags"},"ecosystem\'s flags")," to warn about unsafe atoms being used in certain environments."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Set this via the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"../types/AtomConfig#flags"},"AtomConfig option")," passed to ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"../factories/atom"},"the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"a"},"atom()")," factory"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("h3",{"id":"forwardpromises"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"h3"},".forwardPromises")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"A boolean. May be undefined. If not set, the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"Ecosystem#defaultforwardpromises"},"ecosystem\'s ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"a"},".defaultForwardPromises")," property")," will be used. If set to ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"true"),", this atom\'s instances will create a default ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"AtomInstance#promise"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"a"},"promise")," property")," that is effectively a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"Promise.all()")," of the atom instance\'s initial dependencies\' promises."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"No default promise will be created if:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ul"},"None of the initial dependencies have promises."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ul"},"A promise is set manually via ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"li","href":"AtomApi#setpromise"},"AtomApi\'s ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"a"},".setPromise()")),".")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Setting this option overrides the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},".defaultForwardPromises")," config option set at ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"Ecosystem#defaultforwardpromises"},"the ecosystem level"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"See ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"../../walkthrough/suspense"},"the suspense walkthrough")," for examples."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Set this via the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"../types/AtomConfig#forwardpromises"},"AtomConfig option")," passed to ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"../factories/atom"},"the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"a"},"atom()")," factory"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("h3",{"id":"maxinstances"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"h3"},".maxInstances")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"A number. May be undefined. Indicates the largest ideal cache size of the atom."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"When more than ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"maxInstances")," number of atom instances of this atom are created in an ecosystem, Zedux\' behavior will change regarding the cleanup of those instances. Zedux will ignore ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"ttl")," and instantly clean up instances when they go stale until the number of instances is back within ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"maxInstances"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Set this via the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"../types/AtomConfig#maxinstances"},"AtomConfig option")," passed to ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"../factories/atom"},"the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"a"},"atom()")," factory"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("h3",{"id":"ttl"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"h3"},".ttl")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"A number. May be undefined. If not set, the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"Ecosystem#defaultttl"},"ecosystem\'s ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"a"},"defaultTtl"))," will be used. If the ecosystem doesn\'t set a default, instances of this atom will live forever by default. Setting this value will override any default."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ul"},"Set to ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"li"},"-1")," to make this atom\'s instances live forever."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ul"},"Set to ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"li"},"0")," to make all atom instances in this ecosystem die by default as soon as they go stale."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ul"},"Set to any positive integer to make atoms live in a stale state for ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"li"},"<ttl>")," milliseconds before being cleaned up.")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"This option can be overridden and configured more granularly by the atom instances themselves via ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"AtomApi#setttl"},"AtomApi#setTtl"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Set this via the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"../types/AtomConfig#ttl"},"AtomConfig option")," passed to ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"../factories/atom"},"the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"a"},"atom()")," factory"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("h2",{"id":"methods"},"Methods"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"This class exposes the following methods:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("h3",{"id":"override"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"h3"},".override")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Creates an exact clone of this atom, but with a different value."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("code",{parentName:"pre","className":"language-ts"},".override(newValue) => Atom\\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Returns the new atom."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("h4",{"id":"newvalue"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"h4"},"newValue")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Can be any of the same ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"../factories/atom#value"},"six value types")," that ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"atom()")," accepts."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("h2",{"id":"extending"},"Extending"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"When creating your own, custom atom types, you\'ll usually want to extend this class. Creating your own atom types is an advanced feature and we\'re not currently documenting it as the internals of these classes may change."));};MDXContent.isMDXComponent=true;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LENBQ3BELG1FQUNFLElBQUksQ0FBRSxVQUFVLEVBQ2YsMkVBQVksVUFBVSxDQUFDLElBQUksY0FBMkIsQ0FBSyxDQUM5RCx5SUFBMkUsQ0FDM0Usd0VBQUsscUVBQU0sVUFBVSxDQUFDLEtBQUssQ0FDdkIsV0FBVyxDQUFFLGFBQWEsa0NBRXpCLENBQU0sQ0FDWCw4RkFBZ0MsQ0FDaEMsbUVBQ0UsSUFBSSxDQUFFLFVBQVUsRUFDZiwyRUFBWSxVQUFVLENBQUMsSUFBSSxhQUEwQixDQUFLLENBQzdELGdHQUE4QixrRUFBRyxVQUFVLENBQUMsR0FBRyxDQUMzQyxNQUFNLENBQUUseUJBQXlCLG9CQUNULFVBQVUsMkVBQVksVUFBVSxDQUFDLEdBQUcsV0FBd0IsYUFBaUIsQ0FDekcsbUVBQ0UsSUFBSSxDQUFFLFdBQVcsY0FDRSxDQUNyQixzU0FBd08sQ0FDNU4sQ0FDaEIsQ0FDQSxDQUNBRCxVQUFVLENBQUNHLGNBQWMsQ0FBRyxJQUFJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vemVkdXgtZG9jcy8uL2RvY3MvYXBpL2NsYXNzZXMvQXRvbS5tZHg/MTQzYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbi8qIEBqc3hGcmFnIFJlYWN0LkZyYWdtZW50ICovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0JztcblxuXG5leHBvcnQgY29uc3QgZnJvbnRNYXR0ZXIgPSB7XG5cdGlkOiAnQXRvbScsXG5cdHRpdGxlOiAnQXRvbSdcbn07XG5leHBvcnQgY29uc3QgY29udGVudFRpdGxlID0gdW5kZWZpbmVkO1xuZXhwb3J0IGNvbnN0IG1ldGFkYXRhID0ge1xuICBcInVudmVyc2lvbmVkSWRcIjogXCJhcGkvY2xhc3Nlcy9BdG9tXCIsXG4gIFwiaWRcIjogXCJhcGkvY2xhc3Nlcy9BdG9tXCIsXG4gIFwidGl0bGVcIjogXCJBdG9tXCIsXG4gIFwiZGVzY3JpcHRpb25cIjogXCJUaGUgc3RhbmRhcmQsIGRlZmF1bHQgYXRvbSB0eXBlLiBJbnN0YW5jZXMgb2YgdGhpcyBjbGFzcyBhcmUgcGFzc2VkIHRvIG1vc3Qgb2YgWmVkdXgnIGhvb2tzIGFuZCBpbmplY3RvcnMuXCIsXG4gIFwic291cmNlXCI6IFwiQHNpdGUvZG9jcy9hcGkvY2xhc3Nlcy9BdG9tLm1keFwiLFxuICBcInNvdXJjZURpck5hbWVcIjogXCJhcGkvY2xhc3Nlc1wiLFxuICBcInNsdWdcIjogXCIvYXBpL2NsYXNzZXMvQXRvbVwiLFxuICBcInBlcm1hbGlua1wiOiBcIi96ZWR1eC9kb2NzL2FwaS9jbGFzc2VzL0F0b21cIixcbiAgXCJkcmFmdFwiOiBmYWxzZSxcbiAgXCJlZGl0VXJsXCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL09tbmlzdGFjL3plZHV4L3RyZWUvbWFzdGVyL2RvY3MvYXBpL2NsYXNzZXMvQXRvbS5tZHhcIixcbiAgXCJ0YWdzXCI6IFtdLFxuICBcInZlcnNpb25cIjogXCJjdXJyZW50XCIsXG4gIFwiZnJvbnRNYXR0ZXJcIjoge1xuICAgIFwiaWRcIjogXCJBdG9tXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkF0b21cIlxuICB9LFxuICBcInNpZGViYXJcIjogXCJyZWFjdFwiLFxuICBcInByZXZpb3VzXCI6IHtcbiAgICBcInRpdGxlXCI6IFwiU3RvcmUgQ29tcG9zaXRpb25cIixcbiAgICBcInBlcm1hbGlua1wiOiBcIi96ZWR1eC9kb2NzL2FkdmFuY2VkL3N0b3JlLWNvbXBvc2l0aW9uXCJcbiAgfSxcbiAgXCJuZXh0XCI6IHtcbiAgICBcInRpdGxlXCI6IFwiQXRvbUFwaVwiLFxuICAgIFwicGVybWFsaW5rXCI6IFwiL3plZHV4L2RvY3MvYXBpL2NsYXNzZXMvQXRvbUFwaVwiXG4gIH1cbn07XG5leHBvcnQgY29uc3QgYXNzZXRzID0ge1xuXG59O1xuXG5cbmV4cG9ydCBjb25zdCB0b2MgPSBbe1xuICB2YWx1ZTogJ0NyZWF0aW9uJyxcbiAgaWQ6ICdjcmVhdGlvbicsXG4gIGxldmVsOiAyXG59LCB7XG4gIHZhbHVlOiAnUHJvcGVydGllcycsXG4gIGlkOiAncHJvcGVydGllcycsXG4gIGxldmVsOiAyXG59LCB7XG4gIHZhbHVlOiAnPGNvZGU+LmtleTwvY29kZT4nLFxuICBpZDogJ2tleScsXG4gIGxldmVsOiAzXG59LCB7XG4gIHZhbHVlOiAnPGNvZGU+LmZsYWdzPC9jb2RlPicsXG4gIGlkOiAnZmxhZ3MnLFxuICBsZXZlbDogM1xufSwge1xuICB2YWx1ZTogJzxjb2RlPi5mb3J3YXJkUHJvbWlzZXM8L2NvZGU+JyxcbiAgaWQ6ICdmb3J3YXJkcHJvbWlzZXMnLFxuICBsZXZlbDogM1xufSwge1xuICB2YWx1ZTogJzxjb2RlPi5tYXhJbnN0YW5jZXM8L2NvZGU+JyxcbiAgaWQ6ICdtYXhpbnN0YW5jZXMnLFxuICBsZXZlbDogM1xufSwge1xuICB2YWx1ZTogJzxjb2RlPi50dGw8L2NvZGU+JyxcbiAgaWQ6ICd0dGwnLFxuICBsZXZlbDogM1xufSwge1xuICB2YWx1ZTogJ01ldGhvZHMnLFxuICBpZDogJ21ldGhvZHMnLFxuICBsZXZlbDogMlxufSwge1xuICB2YWx1ZTogJzxjb2RlPi5vdmVycmlkZTwvY29kZT4nLFxuICBpZDogJ292ZXJyaWRlJyxcbiAgbGV2ZWw6IDNcbn0sIHtcbiAgdmFsdWU6ICc8Y29kZT5uZXdWYWx1ZTwvY29kZT4nLFxuICBpZDogJ25ld3ZhbHVlJyxcbiAgbGV2ZWw6IDRcbn0sIHtcbiAgdmFsdWU6ICdFeHRlbmRpbmcnLFxuICBpZDogJ2V4dGVuZGluZycsXG4gIGxldmVsOiAyXG59XTtcbmV4cG9ydCBjb25zdCBBdG9tS2V5RGVzYyA9ICgpID0+IDxkaXY+XG4gICAgVGhlIGtleSBpcyB0aGUga2V5IHRvIERlcGVuZGVuY3kgSW5qZWN0aW9uIC0gaXQncyBob3cgZWNvc3lzdGVtcyBrbm93IHdoaWNoIGF0b21zIHRvIG92ZXJyaWRlLiBJdCBhbHNvIGFpZHMgZGV2ZWxvcG1lbnQgLSBtYW55IGVycm9ycyB3aWxsIGxvZyB0aGUga2V5IG9mIHRoZSBhdG9tIHRoZXkgb3JpZ2luYXRlZCBpbi4gS2V5cyBhbHNvIGhlbHAgd2l0aCBhIGNvZGViYXNlJ3MgZ3JlcGFiaWxpdHkuXG4gIDwvZGl2PjtcblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIHRvYyxcbkF0b21LZXlEZXNjXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG5cbiAgICA8cD57YFRoZSBzdGFuZGFyZCwgZGVmYXVsdCBhdG9tIHR5cGUuIEluc3RhbmNlcyBvZiB0aGlzIGNsYXNzIGFyZSBwYXNzZWQgdG8gbW9zdCBvZiBaZWR1eCcgaG9va3MgYW5kIGluamVjdG9ycy5gfTwvcD5cbiAgICA8cD57YEFuIGF0b20gZGVmaW5lcyBhIHRlbXBsYXRlIHRoYXQgWmVkdXggd2lsbCB1c2UgdG8gY3JlYXRlIGF0b20gaW5zdGFuY2VzLiBEbyBub3QgY29uZnVzZSBcImF0b20gaW5zdGFuY2VzXCIgd2l0aCBpbnN0YW5jZXMgb2YgdGhpcyBBdG9tIGNsYXNzISBBdG9tIGluc3RhbmNlcyBhcmUgYWN0dWFsbHkgaW5zdGFuY2VzIG9mIGB9PGEgcGFyZW50TmFtZT1cInBcIiB7Li4ue1xuICAgICAgICBcImhyZWZcIjogXCJBdG9tSW5zdGFuY2VcIlxuICAgICAgfX0+e2B0aGUgQXRvbUluc3RhbmNlIGNsYXNzYH08L2E+e2Ag8J+klS4gV2UgcmVmZXIgdG8gaW5zdGFuY2VzIG9mIHRoaXMgQXRvbSBjbGFzcyBhcyBzaW1wbHkgXCJhdG9tc1wiLmB9PC9wPlxuICAgIDxoMiB7Li4ue1xuICAgICAgXCJpZFwiOiBcImNyZWF0aW9uXCJcbiAgICB9fT57YENyZWF0aW9uYH08L2gyPlxuICAgIDxwPntgVXNlIGB9PGEgcGFyZW50TmFtZT1cInBcIiB7Li4ue1xuICAgICAgICBcImhyZWZcIjogXCIuLi9mYWN0b3JpZXMvYXRvbVwiXG4gICAgICB9fT57YHRoZSBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJhXCI+e2BhdG9tKClgfTwvaW5saW5lQ29kZT57YCBmYWN0b3J5YH08L2E+e2AgdG8gY3JlYXRlIGF0b21zOmB9PC9wPlxuICAgIDxwcmU+PGNvZGUgcGFyZW50TmFtZT1cInByZVwiIHsuLi57XG4gICAgICAgIFwiY2xhc3NOYW1lXCI6IFwibGFuZ3VhZ2UtdHNcIlxuICAgICAgfX0+e2BpbXBvcnQgeyBBdG9tLCBhdG9tIH0gZnJvbSAnQHplZHV4L3JlYWN0J1xuXG5jb25zdCBleGFtcGxlQXRvbSA9IGF0b20oJ2V4YW1wbGUnLCAnaW5pdGlhbCBzdGF0ZScpXG5cbmV4YW1wbGVBdG9tIGluc3RhbmNlb2YgQXRvbSAvLyB0cnVlXG5gfTwvY29kZT48L3ByZT5cbiAgICA8aDIgey4uLntcbiAgICAgIFwiaWRcIjogXCJwcm9wZXJ0aWVzXCJcbiAgICB9fT57YFByb3BlcnRpZXNgfTwvaDI+XG4gICAgPHA+e2BUaGlzIGNsYXNzIGV4cG9zZXMgdGhlIGZvbGxvd2luZyBwcm9wZXJ0aWVzOmB9PC9wPlxuICAgIDxoMyB7Li4ue1xuICAgICAgXCJpZFwiOiBcImtleVwiXG4gICAgfX0+PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImgzXCI+e2Aua2V5YH08L2lubGluZUNvZGU+PC9oMz5cbiAgICA8cD57YEEgc3RyaW5nLiBXaWxsIGFsd2F5cyBiZSBzZXQuIFRoaXMgaXMgdGhlIGZpcnN0IHBhcmFtZXRlciBwYXNzZWQgdG8gYH08YSBwYXJlbnROYW1lPVwicFwiIHsuLi57XG4gICAgICAgIFwiaHJlZlwiOiBcIi4uL2ZhY3Rvcmllcy9hdG9tXCJcbiAgICAgIH19PntgdGhlIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImFcIj57YGF0b20oKWB9PC9pbmxpbmVDb2RlPntgIGZhY3RvcnlgfTwvYT57YC5gfTwvcD5cbiAgICA8QXRvbUtleURlc2MgbWR4VHlwZT1cIkF0b21LZXlEZXNjXCIgLz5cbiAgICA8aDMgey4uLntcbiAgICAgIFwiaWRcIjogXCJmbGFnc1wiXG4gICAgfX0+PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImgzXCI+e2AuZmxhZ3NgfTwvaW5saW5lQ29kZT48L2gzPlxuICAgIDxwPntgQW4gYXJyYXkgb2Ygc3RyaW5ncy4gTWF5IGJlIHVuZGVmaW5lZC4gVGhlIGZsYWdzIHRoYXQgd2lsbCBiZSBjaGVja2VkIGFsb25nc2lkZSBhbiBgfTxhIHBhcmVudE5hbWU9XCJwXCIgey4uLntcbiAgICAgICAgXCJocmVmXCI6IFwiRWNvc3lzdGVtI2ZsYWdzXCJcbiAgICAgIH19PntgZWNvc3lzdGVtJ3MgZmxhZ3NgfTwvYT57YCB0byB3YXJuIGFib3V0IHVuc2FmZSBhdG9tcyBiZWluZyB1c2VkIGluIGNlcnRhaW4gZW52aXJvbm1lbnRzLmB9PC9wPlxuICAgIDxwPntgU2V0IHRoaXMgdmlhIHRoZSBgfTxhIHBhcmVudE5hbWU9XCJwXCIgey4uLntcbiAgICAgICAgXCJocmVmXCI6IFwiLi4vdHlwZXMvQXRvbUNvbmZpZyNmbGFnc1wiXG4gICAgICB9fT57YEF0b21Db25maWcgb3B0aW9uYH08L2E+e2AgcGFzc2VkIHRvIGB9PGEgcGFyZW50TmFtZT1cInBcIiB7Li4ue1xuICAgICAgICBcImhyZWZcIjogXCIuLi9mYWN0b3JpZXMvYXRvbVwiXG4gICAgICB9fT57YHRoZSBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJhXCI+e2BhdG9tKClgfTwvaW5saW5lQ29kZT57YCBmYWN0b3J5YH08L2E+e2AuYH08L3A+XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwiZm9yd2FyZHByb21pc2VzXCJcbiAgICB9fT48aW5saW5lQ29kZSBwYXJlbnROYW1lPVwiaDNcIj57YC5mb3J3YXJkUHJvbWlzZXNgfTwvaW5saW5lQ29kZT48L2gzPlxuICAgIDxwPntgQSBib29sZWFuLiBNYXkgYmUgdW5kZWZpbmVkLiBJZiBub3Qgc2V0LCB0aGUgYH08YSBwYXJlbnROYW1lPVwicFwiIHsuLi57XG4gICAgICAgIFwiaHJlZlwiOiBcIkVjb3N5c3RlbSNkZWZhdWx0Zm9yd2FyZHByb21pc2VzXCJcbiAgICAgIH19PntgZWNvc3lzdGVtJ3MgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwiYVwiPntgLmRlZmF1bHRGb3J3YXJkUHJvbWlzZXNgfTwvaW5saW5lQ29kZT57YCBwcm9wZXJ0eWB9PC9hPntgIHdpbGwgYmUgdXNlZC4gSWYgc2V0IHRvIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YHRydWVgfTwvaW5saW5lQ29kZT57YCwgdGhpcyBhdG9tJ3MgaW5zdGFuY2VzIHdpbGwgY3JlYXRlIGEgZGVmYXVsdCBgfTxhIHBhcmVudE5hbWU9XCJwXCIgey4uLntcbiAgICAgICAgXCJocmVmXCI6IFwiQXRvbUluc3RhbmNlI3Byb21pc2VcIlxuICAgICAgfX0+PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImFcIj57YHByb21pc2VgfTwvaW5saW5lQ29kZT57YCBwcm9wZXJ0eWB9PC9hPntgIHRoYXQgaXMgZWZmZWN0aXZlbHkgYSBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BQcm9taXNlLmFsbCgpYH08L2lubGluZUNvZGU+e2Agb2YgdGhlIGF0b20gaW5zdGFuY2UncyBpbml0aWFsIGRlcGVuZGVuY2llcycgcHJvbWlzZXMuYH08L3A+XG4gICAgPHA+e2BObyBkZWZhdWx0IHByb21pc2Ugd2lsbCBiZSBjcmVhdGVkIGlmOmB9PC9wPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YE5vbmUgb2YgdGhlIGluaXRpYWwgZGVwZW5kZW5jaWVzIGhhdmUgcHJvbWlzZXMuYH08L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgQSBwcm9taXNlIGlzIHNldCBtYW51YWxseSB2aWEgYH08YSBwYXJlbnROYW1lPVwibGlcIiB7Li4ue1xuICAgICAgICAgIFwiaHJlZlwiOiBcIkF0b21BcGkjc2V0cHJvbWlzZVwiXG4gICAgICAgIH19PntgQXRvbUFwaSdzIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImFcIj57YC5zZXRQcm9taXNlKClgfTwvaW5saW5lQ29kZT48L2E+e2AuYH08L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BTZXR0aW5nIHRoaXMgb3B0aW9uIG92ZXJyaWRlcyB0aGUgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgLmRlZmF1bHRGb3J3YXJkUHJvbWlzZXNgfTwvaW5saW5lQ29kZT57YCBjb25maWcgb3B0aW9uIHNldCBhdCBgfTxhIHBhcmVudE5hbWU9XCJwXCIgey4uLntcbiAgICAgICAgXCJocmVmXCI6IFwiRWNvc3lzdGVtI2RlZmF1bHRmb3J3YXJkcHJvbWlzZXNcIlxuICAgICAgfX0+e2B0aGUgZWNvc3lzdGVtIGxldmVsYH08L2E+e2AuYH08L3A+XG4gICAgPHA+e2BTZWUgYH08YSBwYXJlbnROYW1lPVwicFwiIHsuLi57XG4gICAgICAgIFwiaHJlZlwiOiBcIi4uLy4uL3dhbGt0aHJvdWdoL3N1c3BlbnNlXCJcbiAgICAgIH19PntgdGhlIHN1c3BlbnNlIHdhbGt0aHJvdWdoYH08L2E+e2AgZm9yIGV4YW1wbGVzLmB9PC9wPlxuICAgIDxwPntgU2V0IHRoaXMgdmlhIHRoZSBgfTxhIHBhcmVudE5hbWU9XCJwXCIgey4uLntcbiAgICAgICAgXCJocmVmXCI6IFwiLi4vdHlwZXMvQXRvbUNvbmZpZyNmb3J3YXJkcHJvbWlzZXNcIlxuICAgICAgfX0+e2BBdG9tQ29uZmlnIG9wdGlvbmB9PC9hPntgIHBhc3NlZCB0byBgfTxhIHBhcmVudE5hbWU9XCJwXCIgey4uLntcbiAgICAgICAgXCJocmVmXCI6IFwiLi4vZmFjdG9yaWVzL2F0b21cIlxuICAgICAgfX0+e2B0aGUgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwiYVwiPntgYXRvbSgpYH08L2lubGluZUNvZGU+e2AgZmFjdG9yeWB9PC9hPntgLmB9PC9wPlxuICAgIDxoMyB7Li4ue1xuICAgICAgXCJpZFwiOiBcIm1heGluc3RhbmNlc1wiXG4gICAgfX0+PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImgzXCI+e2AubWF4SW5zdGFuY2VzYH08L2lubGluZUNvZGU+PC9oMz5cbiAgICA8cD57YEEgbnVtYmVyLiBNYXkgYmUgdW5kZWZpbmVkLiBJbmRpY2F0ZXMgdGhlIGxhcmdlc3QgaWRlYWwgY2FjaGUgc2l6ZSBvZiB0aGUgYXRvbS5gfTwvcD5cbiAgICA8cD57YFdoZW4gbW9yZSB0aGFuIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YG1heEluc3RhbmNlc2B9PC9pbmxpbmVDb2RlPntgIG51bWJlciBvZiBhdG9tIGluc3RhbmNlcyBvZiB0aGlzIGF0b20gYXJlIGNyZWF0ZWQgaW4gYW4gZWNvc3lzdGVtLCBaZWR1eCcgYmVoYXZpb3Igd2lsbCBjaGFuZ2UgcmVnYXJkaW5nIHRoZSBjbGVhbnVwIG9mIHRob3NlIGluc3RhbmNlcy4gWmVkdXggd2lsbCBpZ25vcmUgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgdHRsYH08L2lubGluZUNvZGU+e2AgYW5kIGluc3RhbnRseSBjbGVhbiB1cCBpbnN0YW5jZXMgd2hlbiB0aGV5IGdvIHN0YWxlIHVudGlsIHRoZSBudW1iZXIgb2YgaW5zdGFuY2VzIGlzIGJhY2sgd2l0aGluIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YG1heEluc3RhbmNlc2B9PC9pbmxpbmVDb2RlPntgLmB9PC9wPlxuICAgIDxwPntgU2V0IHRoaXMgdmlhIHRoZSBgfTxhIHBhcmVudE5hbWU9XCJwXCIgey4uLntcbiAgICAgICAgXCJocmVmXCI6IFwiLi4vdHlwZXMvQXRvbUNvbmZpZyNtYXhpbnN0YW5jZXNcIlxuICAgICAgfX0+e2BBdG9tQ29uZmlnIG9wdGlvbmB9PC9hPntgIHBhc3NlZCB0byBgfTxhIHBhcmVudE5hbWU9XCJwXCIgey4uLntcbiAgICAgICAgXCJocmVmXCI6IFwiLi4vZmFjdG9yaWVzL2F0b21cIlxuICAgICAgfX0+e2B0aGUgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwiYVwiPntgYXRvbSgpYH08L2lubGluZUNvZGU+e2AgZmFjdG9yeWB9PC9hPntgLmB9PC9wPlxuICAgIDxoMyB7Li4ue1xuICAgICAgXCJpZFwiOiBcInR0bFwiXG4gICAgfX0+PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImgzXCI+e2AudHRsYH08L2lubGluZUNvZGU+PC9oMz5cbiAgICA8cD57YEEgbnVtYmVyLiBNYXkgYmUgdW5kZWZpbmVkLiBJZiBub3Qgc2V0LCB0aGUgYH08YSBwYXJlbnROYW1lPVwicFwiIHsuLi57XG4gICAgICAgIFwiaHJlZlwiOiBcIkVjb3N5c3RlbSNkZWZhdWx0dHRsXCJcbiAgICAgIH19PntgZWNvc3lzdGVtJ3MgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwiYVwiPntgZGVmYXVsdFR0bGB9PC9pbmxpbmVDb2RlPjwvYT57YCB3aWxsIGJlIHVzZWQuIElmIHRoZSBlY29zeXN0ZW0gZG9lc24ndCBzZXQgYSBkZWZhdWx0LCBpbnN0YW5jZXMgb2YgdGhpcyBhdG9tIHdpbGwgbGl2ZSBmb3JldmVyIGJ5IGRlZmF1bHQuIFNldHRpbmcgdGhpcyB2YWx1ZSB3aWxsIG92ZXJyaWRlIGFueSBkZWZhdWx0LmB9PC9wPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YFNldCB0byBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgLTFgfTwvaW5saW5lQ29kZT57YCB0byBtYWtlIHRoaXMgYXRvbSdzIGluc3RhbmNlcyBsaXZlIGZvcmV2ZXIuYH08L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgU2V0IHRvIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2AwYH08L2lubGluZUNvZGU+e2AgdG8gbWFrZSBhbGwgYXRvbSBpbnN0YW5jZXMgaW4gdGhpcyBlY29zeXN0ZW0gZGllIGJ5IGRlZmF1bHQgYXMgc29vbiBhcyB0aGV5IGdvIHN0YWxlLmB9PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YFNldCB0byBhbnkgcG9zaXRpdmUgaW50ZWdlciB0byBtYWtlIGF0b21zIGxpdmUgaW4gYSBzdGFsZSBzdGF0ZSBmb3IgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YDx0dGw+YH08L2lubGluZUNvZGU+e2AgbWlsbGlzZWNvbmRzIGJlZm9yZSBiZWluZyBjbGVhbmVkIHVwLmB9PC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgVGhpcyBvcHRpb24gY2FuIGJlIG92ZXJyaWRkZW4gYW5kIGNvbmZpZ3VyZWQgbW9yZSBncmFudWxhcmx5IGJ5IHRoZSBhdG9tIGluc3RhbmNlcyB0aGVtc2VsdmVzIHZpYSBgfTxhIHBhcmVudE5hbWU9XCJwXCIgey4uLntcbiAgICAgICAgXCJocmVmXCI6IFwiQXRvbUFwaSNzZXR0dGxcIlxuICAgICAgfX0+e2BBdG9tQXBpI3NldFR0bGB9PC9hPntgLmB9PC9wPlxuICAgIDxwPntgU2V0IHRoaXMgdmlhIHRoZSBgfTxhIHBhcmVudE5hbWU9XCJwXCIgey4uLntcbiAgICAgICAgXCJocmVmXCI6IFwiLi4vdHlwZXMvQXRvbUNvbmZpZyN0dGxcIlxuICAgICAgfX0+e2BBdG9tQ29uZmlnIG9wdGlvbmB9PC9hPntgIHBhc3NlZCB0byBgfTxhIHBhcmVudE5hbWU9XCJwXCIgey4uLntcbiAgICAgICAgXCJocmVmXCI6IFwiLi4vZmFjdG9yaWVzL2F0b21cIlxuICAgICAgfX0+e2B0aGUgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwiYVwiPntgYXRvbSgpYH08L2lubGluZUNvZGU+e2AgZmFjdG9yeWB9PC9hPntgLmB9PC9wPlxuICAgIDxoMiB7Li4ue1xuICAgICAgXCJpZFwiOiBcIm1ldGhvZHNcIlxuICAgIH19PntgTWV0aG9kc2B9PC9oMj5cbiAgICA8cD57YFRoaXMgY2xhc3MgZXhwb3NlcyB0aGUgZm9sbG93aW5nIG1ldGhvZHM6YH08L3A+XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwib3ZlcnJpZGVcIlxuICAgIH19PjxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJoM1wiPntgLm92ZXJyaWRlYH08L2lubGluZUNvZGU+PC9oMz5cbiAgICA8cD57YENyZWF0ZXMgYW4gZXhhY3QgY2xvbmUgb2YgdGhpcyBhdG9tLCBidXQgd2l0aCBhIGRpZmZlcmVudCB2YWx1ZS5gfTwvcD5cbiAgICA8cHJlPjxjb2RlIHBhcmVudE5hbWU9XCJwcmVcIiB7Li4ue1xuICAgICAgICBcImNsYXNzTmFtZVwiOiBcImxhbmd1YWdlLXRzXCJcbiAgICAgIH19PntgLm92ZXJyaWRlKG5ld1ZhbHVlKSA9PiBBdG9tXG5gfTwvY29kZT48L3ByZT5cbiAgICA8cD57YFJldHVybnMgdGhlIG5ldyBhdG9tLmB9PC9wPlxuICAgIDxoNCB7Li4ue1xuICAgICAgXCJpZFwiOiBcIm5ld3ZhbHVlXCJcbiAgICB9fT48aW5saW5lQ29kZSBwYXJlbnROYW1lPVwiaDRcIj57YG5ld1ZhbHVlYH08L2lubGluZUNvZGU+PC9oND5cbiAgICA8cD57YENhbiBiZSBhbnkgb2YgdGhlIHNhbWUgYH08YSBwYXJlbnROYW1lPVwicFwiIHsuLi57XG4gICAgICAgIFwiaHJlZlwiOiBcIi4uL2ZhY3Rvcmllcy9hdG9tI3ZhbHVlXCJcbiAgICAgIH19Pntgc2l4IHZhbHVlIHR5cGVzYH08L2E+e2AgdGhhdCBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BhdG9tKClgfTwvaW5saW5lQ29kZT57YCBhY2NlcHRzLmB9PC9wPlxuICAgIDxoMiB7Li4ue1xuICAgICAgXCJpZFwiOiBcImV4dGVuZGluZ1wiXG4gICAgfX0+e2BFeHRlbmRpbmdgfTwvaDI+XG4gICAgPHA+e2BXaGVuIGNyZWF0aW5nIHlvdXIgb3duLCBjdXN0b20gYXRvbSB0eXBlcywgeW91J2xsIHVzdWFsbHkgd2FudCB0byBleHRlbmQgdGhpcyBjbGFzcy4gQ3JlYXRpbmcgeW91ciBvd24gYXRvbSB0eXBlcyBpcyBhbiBhZHZhbmNlZCBmZWF0dXJlIGFuZCB3ZSdyZSBub3QgY3VycmVudGx5IGRvY3VtZW50aW5nIGl0IGFzIHRoZSBpbnRlcm5hbHMgb2YgdGhlc2UgY2xhc3NlcyBtYXkgY2hhbmdlLmB9PC9wPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlO1xuIl0sIm5hbWVzIjpbIlJlYWN0IiwibWR4IiwiZnJvbnRNYXR0ZXIiLCJpZCIsInRpdGxlIiwiY29udGVudFRpdGxlIiwidW5kZWZpbmVkIiwibWV0YWRhdGEiLCJhc3NldHMiLCJ0b2MiLCJ2YWx1ZSIsImxldmVsIiwiQXRvbUtleURlc2MiLCJsYXlvdXRQcm9wcyIsIk1EWExheW91dCIsIk1EWENvbnRlbnQiLCJjb21wb25lbnRzIiwicHJvcHMiLCJpc01EWENvbXBvbmVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///8911\n')}}]);