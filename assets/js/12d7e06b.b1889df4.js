(self.webpackChunkzedux_docs=self.webpackChunkzedux_docs||[]).push([[7089],{5867:function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return o},metadata:function(){return l},toc:function(){return r},default:function(){return m}});var a=n(4034),s=n(9973),i=(n(7294),n(3905)),o={id:"AtomInstanceTtl",title:"AtomInstanceTtl"},l={unversionedId:"api/types/AtomInstanceTtl",id:"api/types/AtomInstanceTtl",isDocsHomePage:!1,title:"AtomInstanceTtl",description:"Ttl can be set at the ecosystem, atom, or atom instance levels. Setting a ttl at the atom instance level is the most flexible. You can do so using an AtomApi.",source:"@site/docs/api/types/AtomInstanceTtl.mdx",sourceDirName:"api/types",slug:"/api/types/AtomInstanceTtl",permalink:"/zedux/docs/api/types/AtomInstanceTtl",editUrl:"https://github.com/Omnistac/zedux/tree/master/docs/api/types/AtomInstanceTtl.mdx",version:"current",frontMatter:{id:"AtomInstanceTtl",title:"AtomInstanceTtl"},sidebar:"react",previous:{title:"AtomConfig",permalink:"/zedux/docs/api/types/AtomConfig"},next:{title:"DispatchInterceptor",permalink:"/zedux/docs/api/types/DispatchInterceptor"}},r=[{value:"Definition",id:"definition",children:[]}],c={toc:r};function m(t){var e=t.components,n=(0,s.Z)(t,["components"]);return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Ttl can be set at the ",(0,i.kt)("a",{parentName:"p",href:"../classes/Ecosystem#defaultttl"},"ecosystem"),", ",(0,i.kt)("a",{parentName:"p",href:"../classes/Atom#ttl"},"atom"),", or atom instance levels. Setting a ttl at the atom instance level is the most flexible. You can do so using an ",(0,i.kt)("a",{parentName:"p",href:"../classes/AtomApi#setttl"},"AtomApi"),"."),(0,i.kt)("h2",{id:"definition"},"Definition"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"type AtomInstanceTtl = number | Promise<any> | Observable<any>\n")),(0,i.kt)("p",null,"Note that the ",(0,i.kt)("a",{parentName:"p",href:"../classes/AtomApi#ttl"},(0,i.kt)("inlineCode",{parentName:"a"},".ttl")," property of an AtomApi")," can also be a function that returns any of these."),(0,i.kt)("p",null,"This is far more flexible than ecosystem- and atom-level ttl, which can only be a number."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"When a number is set, Zedux will set a timeout for ",(0,i.kt)("inlineCode",{parentName:"li"},"<ttl>")," milliseconds. When that timeout times out, Zedux will clean up the atom instance."),(0,i.kt)("li",{parentName:"ul"},"When a promise is set, Zedux will wait for that promise to resolve before cleaning up the atom instance."),(0,i.kt)("li",{parentName:"ul"},"When an observable is set, Zedux will wait for that observable to emit before cleaning up the atom instance.")),(0,i.kt)("p",null,"In all cases, if the atom instance is used again while Zedux is awaiting the ok for cleanup, cleanup will be cancelled."))}m.isMDXComponent=!0}}]);