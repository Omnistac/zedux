"use strict";(self.webpackChunkzedux_docs=self.webpackChunkzedux_docs||[]).push([[8245],{5301:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "assets": function() { return /* binding */ assets; },\n/* harmony export */   "contentTitle": function() { return /* binding */ contentTitle; },\n/* harmony export */   "default": function() { return /* binding */ MDXContent; },\n/* harmony export */   "frontMatter": function() { return /* binding */ frontMatter; },\n/* harmony export */   "metadata": function() { return /* binding */ metadata; },\n/* harmony export */   "toc": function() { return /* binding */ toc; }\n/* harmony export */ });\n/* harmony import */ var _Users_joshuaclaunch_code_oss_zedux_docs_node_modules_babel_runtime_helpers_esm_extends_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(7462);\n/* harmony import */ var _Users_joshuaclaunch_code_oss_zedux_docs_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3366);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7294);\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3905);\nvar _excluded=["components"];/* @jsxRuntime classic */ /* @jsx mdx */ /* @jsxFrag React.Fragment */var frontMatter={id:\'store-composition\',title:\'Store Composition\'};var contentTitle=undefined;var metadata={"unversionedId":"advanced/store-composition","id":"advanced/store-composition","title":"Store Composition","description":"This guide is very low-level. Treat it as an FYI that you\'ll probably never need to fully understand.","source":"@site/docs/advanced/store-composition.mdx","sourceDirName":"advanced","slug":"/advanced/store-composition","permalink":"/zedux/docs/advanced/store-composition","draft":false,"editUrl":"https://github.com/Omnistac/zedux/tree/master/docs/advanced/store-composition.mdx","tags":[],"version":"current","frontMatter":{"id":"store-composition","title":"Store Composition"},"sidebar":"react","previous":{"title":"SSR","permalink":"/zedux/docs/advanced/ssr"},"next":{"title":"Time Travel","permalink":"/zedux/docs/advanced/time-travel"}};var assets={};var toc=[{value:\'From the Top\',id:\'from-the-top\',level:2},{value:\'ActionChains\',id:\'actionchains\',level:2},{value:\'Inherit\',id:\'inherit\',level:2},{value:\'Notify\',id:\'notify\',level:2},{value:\'Delegate\',id:\'delegate\',level:2},{value:\'Subscription Order\',id:\'subscription-order\',level:2},{value:\'Schedulers\',id:\'schedulers\',level:3},{value:\'In The Middle\',id:\'in-the-middle\',level:2},{value:\'Caveats\',id:\'caveats\',level:2},{value:\'Dead Stores\',id:\'dead-stores\',level:3},{value:\'Performance\',id:\'performance\',level:3},{value:\'Recap\',id:\'recap\',level:2}];var layoutProps={toc:toc};var MDXLayout="wrapper";function MDXContent(_ref){var components=_ref.components,props=(0,_Users_joshuaclaunch_code_oss_zedux_docs_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(_ref,_excluded);return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(MDXLayout,(0,_Users_joshuaclaunch_code_oss_zedux_docs_node_modules_babel_runtime_helpers_esm_extends_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("admonition",{"title":"low-level warning","type":"caution"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",{parentName:"admonition"},"This guide is very low-level. Treat it as an FYI that you\'ll probably never need to fully understand."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",{parentName:"admonition"},"If you\'re new here, you probably don\'t want to read this doc yet.")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Zedux\'s store composition model is unique, powerful, and, as you can probably guess, pretty complex. This guide will try to break down exactly how Zedux achieves the lofty goal of composable stores."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("admonition",{"title":"you will learn:","type":"tip"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("ul",{parentName:"admonition"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ul"},"How changes propagate up and down the store tree."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ul"},"What ActionChains do."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ul"},"How Zedux makes every state update reproducible."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ul"},"Some quirks and how schedulers fix them."))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("h2",{"id":"from-the-top"},"From the Top"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Let\'s take a giant step back and look at a picture:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("img",{alt:"store composition setup A -&gt; AA, A -&gt; AB, AB -&gt; ABA, AB -&gt; ABB",src:(__webpack_require__(1938)/* ["default"] */ .Z),width:"1684",height:"1412"}),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"This guide will break down the store setup in this image, so let\'s make sure it\'s clear:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"This is a tree of composed stores. Store A is the \\"root\\" or \\"parent\\" store. It has 2 child stores: AA and AB. Store AB has 2 children of its own: ABA and ABB."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"When we say a store is a \\"child\\" of another store, we mean that the child store appears ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("em",{parentName:"p"},"somewhere")," in the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"../api/types/HierarchyDescriptor"},"hierarchy descriptor")," of the parent store. For example:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("code",{parentName:"pre","className":"language-ts"},"const parent = createStore()\\nconst child = createStore()\\n\\nparent.use(child) // the child controls the parent\'s entire state\\n\\nparent.use({\\n  child, // the child store controls only this state slice\\n  otherSlice: anotherStoreOrReducer,\\n})\\n\\nparent.use({\\n  deeply: {\\n    nested: {\\n      child, // the child store can be anywhere in the hierarchy\\n    },\\n  },\\n})\\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Thus the simplest way to create the above image\'s store setup would look like this:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("code",{parentName:"pre","className":"language-ts","metastring":"live resultVar=output","live":true,"resultVar":"output"},"const a = createStore()\\nconst aa = createStore()\\nconst ab = createStore()\\nconst aba = createStore()\\nconst abb = createStore()\\n\\na.use({\\n  aa,\\n  ab: ab.use({\\n    aba,\\n    abb,\\n  }),\\n})\\n\\nconst output = a.getState()\\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"This is the setup we\'ll assume in this guide, but the principles apply for all child stores no matter where they are in a hierarchy descriptor."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("admonition",{"type":"note"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",{parentName:"admonition"},"As you can see in the above sandbox\'s output, child stores with ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"undefined")," state don\'t show up in the parent store. Try modifying the code to set the state of some of the child stores and you\'ll see them appear in the output.")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Alright! The first step to cracking this nut is to learn how stores communicate with each other."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("h2",{"id":"actionchains"},"ActionChains"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Zedux\'s store composition model works by making actions themselves composable objects called ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"../api/types/ActionChain"},"ActionChains"),". The ActionChain contains needed metadata for Zedux to perform its store composition magic."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"ActionChains consist of any number of \\"meta nodes\\" and the wrapped action. The action is always the last node in the chain."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Meta nodes contain special instructions that Zedux understands. We\'ll look at some of these instructions now:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("h2",{"id":"inherit"},"Inherit"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"When a parent store receives a dispatched action, it handles it like any store would - passing it to its reducers. Child stores are wrapped in special reducers. These reducers pass the action along to all child stores. But before they do that, they wrap it in a meta node."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("admonition",{"type":"tip"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",{parentName:"admonition"},"A \\"dispatched action\\" could be a real action dispatched by calling ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"store.dispatch()")," or a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"../api/glossary#pseudo-action"},"pseudo action")," \\"dispatched\\" by calling ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"store.setState()")," or ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"store.setStateDeep()"),".")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"This particular meta node is called ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"../api/utils/internalTypes#inherit"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"a"},"inherit")),". It looks like this:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("code",{parentName:"pre","className":"language-ts"},"// given this action:\\n{ type: \'addTodo\' }\\n// an `inherit` action chain would like:\\n{\\n  metaType: \'@@zedux/inherit\',\\n  payload: { type: \'addTodo\' }\\n}\\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"The child store receives this action chain, unwraps it, and dispatches the unwrapped action to its own reducers (if it has any)."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"If the child has children, it will rewrap the unwrapped action in a new ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"inherit")," meta node. This recurses down through the store tree."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"So back to the picture. That looks like this:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("img",{alt:"A wraps action and dispatches that to AA and AB; AB unwraps action, rewraps it, and dispatches that to ABA and ABB",src:(__webpack_require__(3681)/* ["default"] */ .Z),width:"1684",height:"1412"}),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"When an action is dispatched to the root store, it is also dispatched to every child store, grandchild store, and so on."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"These are full-on dispatches, as if you\'d called ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"store.dispatch()")," yourself with each child store. However, the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"inherit")," node tells Zedux it doesn\'t need to notify the parent of this action. We\'ll look at parent notification next."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"But first, inheritance in code form:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("code",{parentName:"pre","className":"language-ts","metastring":"live resultVar=output","live":true,"resultVar":"output"},"const a = createStore()\\nconst aa = createStore()\\nconst ab = createStore()\\nconst aba = createStore()\\nconst abb = createStore()\\n\\na.use({\\n  aa,\\n  ab: ab.use({\\n    aba,\\n    abb,\\n  }),\\n})\\n\\nlet output\\n\\naba.subscribe({\\n  effects: ({ action }) => {\\n    output = action\\n  },\\n})\\n\\na.dispatch({ type: \'addTodo\' })\\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"inherit")," nodes are never nested more than once. Child stores don\'t care how many layers deep they are in a hierarchy - they only care whether the action is from ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("em",{parentName:"p"},"some")," parent."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("h2",{"id":"notify"},"Notify"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Child stores don\'t dispatch actions to their parent, but they will notify their parent of state updates and the action that caused them. Parent stores register special subscriptions with their child stores to receive these notifications."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"The child store wraps the action in a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"../api/utils/internalTypes#delegate"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"a"},"delegate"))," meta node before passing that to its parent. If that parent has parents, it will wrap the wrapped action again in another ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"delegate")," meta node before notifying them. This recurses up through the store tree."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("admonition",{"type":"note"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",{parentName:"admonition"},"Unlike ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"inherit")," nodes, ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"delegate")," nodes can be nested indefinitely.")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"delegate")," nodes look like this:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("code",{parentName:"pre","className":"language-ts"},"// given this action:\\n{ type: \'addTodo\' }\\n// a `delegate` action chain would like:\\n{\\n  metaType: \'@@zedux/delegate\',\\n  metaData: [\'aba\'],\\n  payload: { type: \'addTodo\' },\\n}\\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"metaData")," property records the key path where the child store is located in the parent store\'s hierarchy. For example, with this setup:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("code",{parentName:"pre","className":"language-ts"},"const parent = createStore()\\nconst child = createStore()\\n\\nparent.use({\\n  deeply: {\\n    nested: { child },\\n  },\\n})\\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"An action dispatched to ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"child")," would be wrapped in a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"delegate")," node like this:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("code",{parentName:"pre","className":"language-ts"},"{\\n  metaType: \'@@zedux/delegate\',\\n  metaData: [\'deeply\', \'nested\', \'child\'],\\n  payload: { type: \'addTodo\' }\\n}\\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"This action chain is the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"action")," object that the parent store\'s ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"../api/types/Subscriber#effects"},"effects subscribers")," would receive."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Back to the picture, here\'s what happens when dispatching an action to a grandchild store:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("img",{alt:"Action dispatched to ABA; ABA wraps it in a &quot;delegate to ABA&quot; node notifies AB; AB wraps it again in a &quot;delegate to AB&quot; node and notifies A",src:(__webpack_require__(6539)/* ["default"] */ .Z),width:"1684",height:"1412"}),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Breakdown:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",{parentName:"li"},"ABA passes the action to its reducers (if any), allowing them to change state. Or, if this \\"dispatch\\" is from a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},".setState()")," or similar call, it handles the state change accordingly.")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",{parentName:"li"},"If this is a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},".setState()")," or ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},".setStateDeep()")," call and no state was changed, nothing else happens. Otherwise:")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",{parentName:"li"},"ABA notifies its subscribers of the dispatch and state change (if it changed).")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",{parentName:"li"},"Before passing the action to AB, its parent, ABA wraps the action in a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"delegate")," node and passes that to AB.")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",{parentName:"li"},"AB ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("strong",{parentName:"p"},"does not pass the action to its reducers"),", it simply receives the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"delegate"),"-wrapped action and relays it to its own subscribers.")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",{parentName:"li"},"Before passing the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"delegate"),"-wrapped action to A, its parent, AB wraps the action ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("em",{parentName:"p"},"again")," in another ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"delegate")," node.")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",{parentName:"li"},"A also ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("strong",{parentName:"p"},"does not pass the action to its reducers"),", it simply relays the received double-wrapped action to its own subscribers."))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"You are perhaps starting to see why this guide is buried in the \\"Advanced\\" section \\uD83D\\uDE05"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"If you\'re still here, here\'s the code version:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("code",{parentName:"pre","className":"language-ts","metastring":"live resultVar=output","live":true,"resultVar":"output"},"const a = createStore()\\nconst aa = createStore()\\nconst ab = createStore()\\nconst aba = createStore()\\nconst abb = createStore()\\n\\na.use({\\n  aa,\\n  ab: ab.use({\\n    aba,\\n    abb,\\n  }),\\n})\\n\\nlet output\\n\\na.subscribe({\\n  effects: ({ action }) => {\\n    output = action\\n  },\\n})\\n\\naba.dispatch({ type: \'addTodo\' })\\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("h2",{"id":"delegate"},"Delegate"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Why is the node called ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"delegate")," instead of ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"notify")," or ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"propagate")," or something bubbly? The purpose of ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"delegate")," nodes is to tell parent stores ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("em",{parentName:"p"},"exactly")," how to reproduce this state change ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("strong",{parentName:"p"},"from their perspective"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"That\'s right, dispatching a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"delegate")," action chain to a parent store is ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("em",{parentName:"p"},"exactly")," the same as dispatching the unwrapped action to the child store. ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"delegate")," action chains tell Zedux to reroute the action to a different store. The action skips the parent store entirely - it will not be dispatched to the parent store\'s reducers or any of its other children."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Observe:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("img",{alt:"&quot;delegate&quot; node dispatched to A, unwrapped and delegated to AB, unwrapped again and delegated to ABA",src:(__webpack_require__(4535)/* ["default"] */ .Z),width:"1684",height:"1412"}),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"After reaching store ABA, the action is dispatched ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("em",{parentName:"p"},"exactly")," as if you\'d dispatched it to ABA directly. It is not wrapped in an ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"inherit")," meta node. This means that unlike ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"inherit"),"ed actions, the action will notify the delegating parent store of the dispatch."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Yep, the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"inherit")," flow happens again:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("img",{alt:"Action dispatched to ABA; ABA wraps it in a &quot;delegate to ABA&quot; node notifies AB; AB wraps it again in a &quot;delegate to AB&quot; node and notifies A",src:(__webpack_require__(6539)/* ["default"] */ .Z),width:"1684",height:"1412"}),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Notice that Stores AA and ABB are ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("em",{parentName:"p"},"completely unaffected")," throughout the whole delegation process."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"This feature is used to implement replayable actions in dev tools. We\'ll look at using this power to implement time travel in the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"time-travel"},"time travel guide"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Now, in code form:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("code",{parentName:"pre","className":"language-ts","metastring":"live resultVar=output","live":true,"resultVar":"output"},"const a = createStore()\\nconst aa = createStore()\\nconst ab = createStore()\\nconst aba = createStore()\\nconst abb = createStore()\\n\\na.use({\\n  aa,\\n  ab: ab.use({\\n    aba,\\n    abb,\\n  }),\\n})\\n\\nconst output = {}\\n\\na.subscribe({\\n  effects: ({ action }) => {\\n    output.aReceived = action\\n  },\\n})\\n\\naba.subscribe({\\n  effects: ({ action }) => {\\n    output.abaReceived = action\\n  },\\n})\\n\\na.dispatch({\\n  metaType: \'@@zedux/delegate\',\\n  metaData: [\'ab\'],\\n  payload: {\\n    metaType: \'@@zedux/delegate\',\\n    metaData: [\'aba\'],\\n    payload: { type: \'addTodo\' },\\n  },\\n})\\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Notice that the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"aba")," subscriber is called first. Let\'s take a closer look at why."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("h2",{"id":"subscription-order"},"Subscription Order"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"The default subscriber notification order goes something like this:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("ol",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ol"},"action dispatched to parent store."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ol"},"action dispatched to first child store."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ol"},"repeat step 2 until reaching a \\"leaf node\\" (a store with no own children)."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ol"},"when the action reaches a leaf node, that store finishes its dispatch and immediately notifies its own subscribers."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ol"},"repeat steps 2-4 with all remaining child stores."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ol"},"when the parent has allowed all its children to dispatch and notify their own subscribers, it does the same."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ol"},"repeat step 6 all the way back up the tree.")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"In short, subscribers are notified starting at leaf nodes, coming all the way back up a branch before proceeding to the next branch."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Example:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("code",{parentName:"pre","className":"language-ts","metastring":"live resultVar=output","live":true,"resultVar":"output"},"// give leaf nodes a reducer now:\\nconst a = createStore()\\nconst aa = createStore((state = 0) => state + 1)\\nconst ab = createStore()\\nconst aba = createStore((state = 0) => state + 1)\\nconst abb = createStore((state = 0) => state + 1)\\n\\na.use({\\n  ab: ab.use({\\n    aba,\\n    abb,\\n  }),\\n  aa, // switch the order for this example\\n})\\n\\nconst output = {}\\n\\na.subscribe({ effects: ({ action }) => (output.aReceived = action) })\\naa.subscribe({ effects: ({ action }) => (output.aaReceived = action) })\\nab.subscribe({\\n  effects: ({ action }) => {\\n    output.abReceived = action\\n    try {\\n      a.getState() // try to read parent state\\n      output.tearingDetected = false\\n    } catch (err) {\\n      output.tearingDetected = true\\n    }\\n  },\\n})\\naba.subscribe({ effects: ({ action }) => (output.abaReceived = action) })\\nabb.subscribe({ effects: ({ action }) => (output.abbReceived = action) })\\n\\na.dispatch({ type: \'addTodo\' })\\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Notice we switched the order of ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"aa")," and ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"ab")," for this example, so you can see the full branch finishing before the next branch starts."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Now, what\'s with that ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"try ... catch"),"?"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"This default order is simple, but can be problematic. If a subscriber in the middle of the tree tries reading a parent store\'s state, it\'ll see that the state is temporarily out of sync between the stores. \\uD83D\\uDE2E Big yikes!"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"As shown in the above example, Zedux disallows the read and throws an error instead. So at least you\'ll know about it. But that\'s no solution."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"This is called \\"tearing\\". And fortunately, it isn\'t a problem you\'ll run into when using stores inside atoms. This is because all stores created in atoms use the ecosystem\'s scheduler to fix this. This includes stores created via ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"../api/injectors/injectStore"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"a"},"injectStore()"))," or manually created via ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"../api/factories/createStore"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"a"},"createStore()"))," ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("em",{parentName:"p"},"during atom evaluation"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("h3",{"id":"schedulers"},"Schedulers"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"The subscription order can be changed. Stores can be configured with a scheduler that can order the notifications however you want. This is so low-level and subject to change that we\'re not documenting that now. But:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"All stores created in atoms use the ecosystem\'s scheduler by default. This scheduler changes the subscription order. It ensures that no subscribers anywhere in the tree are notified until the entire composed store has been updated and is in-sync again."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"After the update has been fully propagated throughout the store tree, subscribers are notified starting from the leaves, proceeding up each branch to the root. Effectively, the order should appear the same as the default order."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"That looks like this:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("code",{parentName:"pre","className":"language-ts","metastring":"live resultVar=output","live":true,"resultVar":"output"},"// this is the low-level stuff; don\'t worry about it:\\nconst ecosystem = createEcosystem({ id: \'change-subscription-order\' })\\nStore._scheduler = ecosystem._scheduler\\n\\nconst a = createStore()\\nconst aa = createStore((state = 0) => state + 1)\\nconst ab = createStore()\\nconst aba = createStore((state = 0) => state + 1)\\nconst abb = createStore((state = 0) => state + 1)\\n\\na.use({\\n  ab: ab.use({\\n    aba,\\n    abb,\\n  }),\\n  aa, // switch the order for this example\\n})\\n\\nconst output = {}\\n\\na.subscribe({ effects: ({ action }) => (output.aReceived = action) })\\naa.subscribe({ effects: ({ action }) => (output.aaReceived = action) })\\nab.subscribe({\\n  effects: ({ action, newState }) => {\\n    output.abReceived = action\\n    output.noMoreTearing = a.getState() // all good now :)\\n  },\\n})\\naba.subscribe({ effects: ({ action }) => (output.abaReceived = action) })\\nabb.subscribe({ effects: ({ action }) => (output.abbReceived = action) })\\n\\na.dispatch({ type: \'addTodo\' })\\n\\n// clean up our mess:\\nStore._scheduler = undefined\\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Now all subscribers are completely safe from tearing. They\'re also safe from another edge case we haven\'t mentioned yet:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"If a subscriber in the middle of the tree dispatches another action to its store, the parent store\'s subscribers will be notified of events ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("em",{parentName:"p"},"out of order"),". This can be handled and isn\'t a straight-up error, but can obviously be very problematic. Schedulers fix this too."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"In summary: Just use stores inside atoms and you\'ll be fine."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("h2",{"id":"in-the-middle"},"In The Middle"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"This last example shows what happens when an action is dispatched in the middle of the tree. You should be able to use your newfound store composition expertise to figure this out yourself. But just in case you\'re dying to see it, here you go:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("img",{alt:"Action dispatched to ABA; ABA wraps it in a &quot;delegate to ABA&quot; node notifies AB; AB wraps it again in a &quot;delegate to AB&quot; node and notifies A",src:(__webpack_require__(8018)/* ["default"] */ .Z),width:"1684",height:"1412"}),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Notifications bubble up while inherited actions bubble down. A thing of beauty, really."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("h2",{"id":"caveats"},"Caveats"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Surely with great power comes great shortcomings. Zedux stores have some imperfections, but overall they\'re exactly the powerhouse of a state management primitive that we needed at Omnistac. The downsides:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("h3",{"id":"dead-stores"},"Dead Stores"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"You need to be conscious of \\"dead stores\\" (frankenstores anyone?). Stores can\'t actually be dead, but atom instances can. When you compose stores together from multiple atom instances, you have to be wary of force-destruction ripping the atom instance and its store out from under you. A simple ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"p"},"store.use({ child: newChildStoreReference })")," fixes that right up."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("h3",{"id":"performance"},"Performance"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Performance-wise, Zedux stores are plenty fast. Some metrics beat out most other tools handily - for example, zero-config store creation time. However, most dispatches and subscriber notifications are slower than other tools. This is because Zedux has to run a little logic to work its store composition magic."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"The (huge) trade-off is that Zedux stores are more modular. Especially when combined with the atomic model, your stores will be tiny compared to a Redux store, for example. This scales extremely well. Indefinitely, in fact."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"The bottom line is that Zedux ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("em",{parentName:"p"},"should")," be more and more performant, relatively, the bigger your app gets. And it\'s only when your app gets bigger that you start to care about performance."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"In other words, Zedux should be a great fit performance-wise for every app. #ZeduxScales"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("h2",{"id":"recap"},"Recap"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"li"},"inherit")," action chains bubble down through the store tree."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"li"},"delegate")," action chains bubble up through the store tree."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ul"},"Actions are only dispatched to reducers in the target store and its children, ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("strong",{parentName:"li"},"not")," its parents."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ul"},"Dispatching a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"li"},"delegate")," action chain to a parent store is ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("em",{parentName:"li"},"exactly")," the same as dispatching the wrapped action to the child store."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ul"},"Use stores inside atoms to prevent subscription order surprises."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ul"},"Happy coding!")));};MDXContent.isMDXComponent=true;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5301\n')},4535:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('/* harmony default export */ __webpack_exports__["Z"] = (__webpack_require__.p + "assets/images/sc-delegate-e858597525a2476ca8d84056e9922424.png");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDUzNS5qcyIsIm1hcHBpbmdzIjoiQUFBQSx5REFBZSxxQkFBdUIsbUVBQW1FIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vemVkdXgtZG9jcy8uL3N0YXRpYy9pbWcvZGlhZ3JhbXMvc2MtZGVsZWdhdGUucG5nP2I4MjQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImFzc2V0cy9pbWFnZXMvc2MtZGVsZWdhdGUtZTg1ODU5NzUyNWEyNDc2Y2E4ZDg0MDU2ZTk5MjI0MjQucG5nXCI7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4535\n')},3681:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('/* harmony default export */ __webpack_exports__["Z"] = (__webpack_require__.p + "assets/images/sc-inherit-a14ca5afae6c9a6bbbd37686248b43b0.png");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzY4MS5qcyIsIm1hcHBpbmdzIjoiQUFBQSx5REFBZSxxQkFBdUIsa0VBQWtFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vemVkdXgtZG9jcy8uL3N0YXRpYy9pbWcvZGlhZ3JhbXMvc2MtaW5oZXJpdC5wbmc/YTUwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYXNzZXRzL2ltYWdlcy9zYy1pbmhlcml0LWExNGNhNWFmYWU2YzlhNmJiYmQzNzY4NjI0OGI0M2IwLnBuZ1wiOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3681\n')},8018:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('/* harmony default export */ __webpack_exports__["Z"] = (__webpack_require__.p + "assets/images/sc-notify-and-inherit-55ade349dd8cf23d61b3c5b03209dd3e.png");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODAxOC5qcyIsIm1hcHBpbmdzIjoiQUFBQSx5REFBZSxxQkFBdUIsNkVBQTZFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vemVkdXgtZG9jcy8uL3N0YXRpYy9pbWcvZGlhZ3JhbXMvc2Mtbm90aWZ5LWFuZC1pbmhlcml0LnBuZz9iOTk1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJhc3NldHMvaW1hZ2VzL3NjLW5vdGlmeS1hbmQtaW5oZXJpdC01NWFkZTM0OWRkOGNmMjNkNjFiM2M1YjAzMjA5ZGQzZS5wbmdcIjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///8018\n')},6539:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('/* harmony default export */ __webpack_exports__["Z"] = (__webpack_require__.p + "assets/images/sc-notify-956fd57e14a5e68180fdda5f2bf4af4d.png");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjUzOS5qcyIsIm1hcHBpbmdzIjoiQUFBQSx5REFBZSxxQkFBdUIsaUVBQWlFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vemVkdXgtZG9jcy8uL3N0YXRpYy9pbWcvZGlhZ3JhbXMvc2Mtbm90aWZ5LnBuZz82NGFkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJhc3NldHMvaW1hZ2VzL3NjLW5vdGlmeS05NTZmZDU3ZTE0YTVlNjgxODBmZGRhNWYyYmY0YWY0ZC5wbmdcIjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6539\n')},1938:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('/* harmony default export */ __webpack_exports__["Z"] = (__webpack_require__.p + "assets/images/sc-setup-47ea7311a2caad7ea473e5eda8785368.png");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTkzOC5qcyIsIm1hcHBpbmdzIjoiQUFBQSx5REFBZSxxQkFBdUIsZ0VBQWdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vemVkdXgtZG9jcy8uL3N0YXRpYy9pbWcvZGlhZ3JhbXMvc2Mtc2V0dXAucG5nP2VjOGIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImFzc2V0cy9pbWFnZXMvc2Mtc2V0dXAtNDdlYTczMTFhMmNhYWQ3ZWE0NzNlNWVkYTg3ODUzNjgucG5nXCI7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1938\n')}}]);