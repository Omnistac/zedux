"use strict";(self.webpackChunkzedux_docs=self.webpackChunkzedux_docs||[]).push([[6570],{1028:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "assets": function() { return /* binding */ assets; },\n/* harmony export */   "contentTitle": function() { return /* binding */ contentTitle; },\n/* harmony export */   "default": function() { return /* binding */ MDXContent; },\n/* harmony export */   "frontMatter": function() { return /* binding */ frontMatter; },\n/* harmony export */   "metadata": function() { return /* binding */ metadata; },\n/* harmony export */   "toc": function() { return /* binding */ toc; }\n/* harmony export */ });\n/* harmony import */ var _Users_joshuaclaunch_code_oss_zedux_docs_node_modules_babel_runtime_helpers_esm_extends_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(7462);\n/* harmony import */ var _Users_joshuaclaunch_code_oss_zedux_docs_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(3366);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7294);\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3905);\n/* harmony import */ var _site_src_all__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9441);\nvar _excluded=["components"];/* @jsxRuntime classic */ /* @jsx mdx */ /* @jsxFrag React.Fragment */var frontMatter={id:\'EcosystemConfig\',title:\'EcosystemConfig\'};var contentTitle=undefined;var metadata={"unversionedId":"api/types/EcosystemConfig","id":"api/types/EcosystemConfig","title":"EcosystemConfig","description":"The config object passed to the createEcosystem() factory.","source":"@site/docs/api/types/EcosystemConfig.mdx","sourceDirName":"api/types","slug":"/api/types/EcosystemConfig","permalink":"/zedux/docs/api/types/EcosystemConfig","draft":false,"editUrl":"https://github.com/Omnistac/zedux/tree/master/docs/api/types/EcosystemConfig.mdx","tags":[],"version":"current","frontMatter":{"id":"EcosystemConfig","title":"EcosystemConfig"},"sidebar":"react","previous":{"title":"DependentCallback","permalink":"/zedux/docs/api/types/DependentCallback"},"next":{"title":"EvaluationReason","permalink":"/zedux/docs/api/types/EvaluationReason"}};var assets={};var toc=[{value:\'Definition\',id:\'definition\',level:2},{value:\'See Also\',id:\'see-also\',level:2}];var layoutProps={toc:toc};var MDXLayout="wrapper";function MDXContent(_ref){var components=_ref.components,props=(0,_Users_joshuaclaunch_code_oss_zedux_docs_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(_ref,_excluded);return (0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(MDXLayout,(0,_Users_joshuaclaunch_code_oss_zedux_docs_node_modules_babel_runtime_helpers_esm_extends_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"The config object passed to ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"p","href":"../factories/createEcosystem"},"the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"a"},"createEcosystem()")," factory"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("h2",{"id":"definition"},"Definition"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("code",{parentName:"pre","className":"language-ts"},"interface EcosystemConfig<\\n  Context extends Record<string, any> | undefined = any\\n> {\\n  complexParams?: boolean\\n  context?: Context\\n  defaultTtl?: number\\n  destroyOnUnmount?: boolean\\n  flags?: string[]\\n  id?: string\\n  onReady?: (\\n    ecosystem: Ecosystem<Context>,\\n    prevContext?: Context\\n  ) => MaybeCleanup\\n  overrides?: AtomBase<any, any[], any>[]\\n  ssr?: boolean\\n}\\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"All fields are optional. It is recommended to at least pass an id."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(_site_src_all__WEBPACK_IMPORTED_MODULE_2__/* .Legend */ .De,{mdxType:"Legend"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(_site_src_all__WEBPACK_IMPORTED_MODULE_2__/* .Item */ .ck,{name:"complexParams",mdxType:"Item"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"A boolean. Default ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("code",null,"false"),". Whether",\' \',(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(_site_src_all__WEBPACK_IMPORTED_MODULE_2__/* .Link */ .rU,{to:"../../advanced/complex-params",mdxType:"Link"},"\\"complex\\" atom and selector params"),\' \',"should be allowed.")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(_site_src_all__WEBPACK_IMPORTED_MODULE_2__/* .Item */ .ck,{name:"context",mdxType:"Item"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"An object. The initial",\' \',(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(_site_src_all__WEBPACK_IMPORTED_MODULE_2__/* .Link */ .rU,{to:"../classes/Ecosystem#context",mdxType:"Link"},"context")," for the ecosystem.")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(_site_src_all__WEBPACK_IMPORTED_MODULE_2__/* .Item */ .ck,{name:"defaultTtl",mdxType:"Item"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"A number. Default ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("code",null,"-1")," (meaning infinite). Will be set as the",\' \',(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(_site_src_all__WEBPACK_IMPORTED_MODULE_2__/* .Link */ .rU,{to:"../classes/Atom#ttl",mdxType:"Link"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("code",null,"ttl")),\' \',"or all atoms that don\'t specify one.")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(_site_src_all__WEBPACK_IMPORTED_MODULE_2__/* .Item */ .ck,{name:"destroyOnUnmount",mdxType:"Item"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"A boolean. Defaults to ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("code",null,"false")," for ecosystems created via",\' \',(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(_site_src_all__WEBPACK_IMPORTED_MODULE_2__/* .Link */ .rU,{to:"../factories/createEcosystem",mdxType:"Link"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("code",null,"createEcosystem()")),". Defaults to ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("code",null,"true")," for ecosystems created automatically by rendering an ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(_site_src_all__WEBPACK_IMPORTED_MODULE_2__/* .Link */ .rU,{to:"../components/EcosystemProvider",mdxType:"Link"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("code",null,"<EcosystemProvider>")),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Whether the ecosystem should destroy itself when its last",\' \',(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("code",null,"<EcosystemProvider>")," unmounts. Can be useful for testing.")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(_site_src_all__WEBPACK_IMPORTED_MODULE_2__/* .Item */ .ck,{name:"flags",mdxType:"Item"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"An array of strings. Will be set as the",\' \',(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(_site_src_all__WEBPACK_IMPORTED_MODULE_2__/* .Link */ .rU,{to:"../classes/Ecosystem#flags",mdxType:"Link"},"ecosystem\'s flags"),".")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(_site_src_all__WEBPACK_IMPORTED_MODULE_2__/* .Item */ .ck,{name:"id",mdxType:"Item"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"A string. Identifies the ecosystem in the",\' \',(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(_site_src_all__WEBPACK_IMPORTED_MODULE_2__/* .Link */ .rU,{to:"../utils/internal-store-utils",mdxType:"Link"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("code",null,"internalStore")),\' \',"and in dev tools. If no id is specified when creating the ecosystem, one will be generated randomly.")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(_site_src_all__WEBPACK_IMPORTED_MODULE_2__/* .Item */ .ck,{name:"onReady",mdxType:"Item"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"A function. Will be called as soon as the ecosystem has initialized. Is also called every time the ecosystem is",\' \',(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(_site_src_all__WEBPACK_IMPORTED_MODULE_2__/* .Link */ .rU,{to:"../classes/Ecosystem#reset",mdxType:"Link"},"reset"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"This is the ideal place to bootstrap data and preload atoms. Since this function is called on reset, it can be used to ensure the ecosystem\'s \\"necessary data\\" is always loaded."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Signature:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(_site_src_all__WEBPACK_IMPORTED_MODULE_2__.Ts,{mdxType:"Ts"},"(ecosystem, prevContext?) => maybeCleanup"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(_site_src_all__WEBPACK_IMPORTED_MODULE_2__/* .Legend */ .De,{mdxType:"Legend"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(_site_src_all__WEBPACK_IMPORTED_MODULE_2__/* .Item */ .ck,{name:"ecosystem",mdxType:"Item"},"A reference to this ecosystem"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(_site_src_all__WEBPACK_IMPORTED_MODULE_2__/* .Item */ .ck,{name:"prevContext",mdxType:"Item"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"A reference to the previous context value of the ecosystem.",\' \',(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("code",null,"ecosystem.reset()")," can be optionally given a new context object. If that happens, the ecosystem\'s context will be updated before this function is called. So a reference to the old context is passed here."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"This parameter will be undefined the first time ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("code",null,"onReady"),\' \',"runs. Thus you can use this to check if this is the initial run."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(_site_src_all__WEBPACK_IMPORTED_MODULE_2__.Ts,{mdxType:"Ts"},"const ecosystem = createEcosystem({\\n  context: { redux: reduxStore },\\n  onReady: (ecosystem, prevContext) => {\\n    if (!prevContext) {\\n      // this is the initial run\\n    } else {\\n      // onReady is running after an ecosystem reset\\n      const nextContext = ecosystem.context\\n      \\n      if (prevContext.redux !== nextContext.redux) {\\n        // ecosystem.reset() changed the redux store reference\\n      }\\n    }\\n  }\\n})\\n\\necosystem.reset() // doesn\'t change context (prevContext === ecosystem.context)\\necosystem.reset({ redux: otherReduxStore }) // replaces context"),\' \',(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Note that replacing context is an all-or-nothing deal. Spread",\' \',(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("code",null,"ecosystem.context")," into a new object to update only part of the context:"),\' \',(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(_site_src_all__WEBPACK_IMPORTED_MODULE_2__.Ts,{mdxType:"Ts"},"ecosystem.reset({ ...ecosystem.context, specialField: \'new val\' })")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(_site_src_all__WEBPACK_IMPORTED_MODULE_2__/* .Item */ .ck,{name:"Returns",mdxType:"Item"},"Either ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("code",null,"undefined")," or a cleanup function that will be called when the ecosystem is reset or destroyed."))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(_site_src_all__WEBPACK_IMPORTED_MODULE_2__/* .Item */ .ck,{name:"overrides",mdxType:"Item"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"An array of ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(_site_src_all__WEBPACK_IMPORTED_MODULE_2__/* .Link */ .rU,{to:"../classes/Atom",mdxType:"Link"},"atoms"),". Will be set as the",\' \',(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(_site_src_all__WEBPACK_IMPORTED_MODULE_2__/* .Link */ .rU,{to:"../classes/Ecosystem#overrides",mdxType:"Link"},"ecosystem\'s overrides"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"Used for",\' \',(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(_site_src_all__WEBPACK_IMPORTED_MODULE_2__/* .Link */ .rU,{to:"../../walkthrough/overrides",mdxType:"Link"},"Dependency Injection"),".")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(_site_src_all__WEBPACK_IMPORTED_MODULE_2__/* .Item */ .ck,{name:"ssr",mdxType:"Item"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"A boolean. Default ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("code",null,"false"),". Turns on SSR mode for the entire ecosystem."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("p",null,"See ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)(_site_src_all__WEBPACK_IMPORTED_MODULE_2__/* .Link */ .rU,{to:"../../advanced/ssr",mdxType:"Link"},"the SSR guide"),"."))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("h2",{"id":"see-also"},"See Also"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"li","href":"../../walkthrough/ecosystems"},"The Ecosystems walkthrough")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"li","href":"../classes/Ecosystem"},"The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"a"},"Ecosystem")," class")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"li","href":"../factories/createEcosystem"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"a"},"createEcosystem()"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("a",{parentName:"li","href":"../components/EcosystemProvider"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__/* .mdx */ .kt)("inlineCode",{parentName:"a"},"<EcosystemProvider>")))));};MDXContent.isMDXComponent=true;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAyOC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs2QkFFQSwwQkFDQSxlQUNBLDZCQU1PLEdBQU1FLFlBQVcsQ0FBRyxDQUMxQkMsRUFBRSxDQUFFLGlCQUFpQixDQUNyQkMsS0FBSyxDQUFFLGlCQUNSLENBQUMsQ0FDTSxHQUFNQyxhQUFZLENBQUdDLFNBQVMsQ0FDOUIsR0FBTUMsU0FBUSxDQUFHLENBQ3RCLGVBQWUsQ0FBRSwyQkFBMkIsQ0FDNUMsSUFBSSxDQUFFLDJCQUEyQixDQUNqQyxPQUFPLENBQUUsaUJBQWlCLENBQzFCLGFBQWEsQ0FBRSw0REFBNEQsQ0FDM0UsUUFBUSxDQUFFLDBDQUEwQyxDQUNwRCxlQUFlLENBQUUsV0FBVyxDQUM1QixNQUFNLENBQUUsNEJBQTRCLENBQ3BDLFdBQVcsQ0FBRSx1Q0FBdUMsQ0FDcEQsT0FBTyxDQUFFLEtBQUssQ0FDZCxTQUFTLENBQUUsa0ZBQWtGLENBQzdGLE1BQU0sQ0FBRSxFQUFFLENBQ1YsU0FBUyxDQUFFLFNBQVMsQ0FDcEIsYUFBYSxDQUFFLENBQ2IsSUFBSSxDQUFFLGlCQUFpQixDQUN2QixPQUFPLENBQUUsaUJBQ1gsQ0FBQyxDQUNELFNBQVMsQ0FBRSxPQUFPLENBQ2xCLFVBQVUsQ0FBRSxDQUNWLE9BQU8sQ0FBRSxtQkFBbUIsQ0FDNUIsV0FBVyxDQUFFLHlDQUNmLENBQUMsQ0FDRCxNQUFNLENBQUUsQ0FDTixPQUFPLENBQUUsa0JBQWtCLENBQzNCLFdBQVcsQ0FBRSx3Q0FDZixDQUNGLENBQUMsQ0FDTSxHQUFNQyxPQUFNLENBQUcsQ0FFdEIsQ0FBQyxDQUdNLEdBQU1RLElBQUcsQ0FBRyxDQUFDLENBQ2xCQyxLQUFLLENBQUUsWUFBWSxDQUNuQmQsRUFBRSxDQUFFLFlBQVksQ0FDaEJlLEtBQUssQ0FBRSxDQUNULENBQUMsQ0FBRSxDQUNERCxLQUFLLENBQUUsVUFBVSxDQUNqQmQsRUFBRSxDQUFFLFVBQVUsQ0FDZGUsS0FBSyxDQUFFLENBQ1QsQ0FBQyxDQUFDLENBRUYsR0FBTUMsWUFBVyxDQUFHLENBQ2xCSCxHQUFHLENBQUhBLEdBQ0YsQ0FBQyxDQUNELEdBQU1JLFVBQVMsQ0FBRyxTQUFTLENBQ1osUUFBU0MsV0FBVSxNQUcvQixJQUZEQyxXQUFVLE1BQVZBLFVBQVUsQ0FDUEMsS0FBSyxzTEFFUixNQUFPLDhEQUFDLFNBQVMsb0pBQUtKLFdBQVcsQ0FBTUksS0FBSyxFQUFFLFVBQVUsQ0FBRUQsVUFBVyxDQUFDLE9BQU8sQ0FBQyxXQUFXLEdBR3ZGLHFHQUFtQyxrRUFBRyxVQUFVLENBQUMsR0FBRyxDQUNoRCxNQUFNLENBQUUsOEJBQThCLFNBQzdCLDJFQUFZLFVBQVUsQ0FBQyxHQUFHLHNCQUFtQyxZQUFnQixLQUFTLENBQ25HLG1FQUNFLElBQUksQ0FBRSxZQUFZLGVBQ0UsQ0FDdEIsd0VBQUsscUVBQU0sVUFBVSxDQUFDLEtBQUssQ0FDdkIsV0FBVyxDQUFFLGFBQWEseVlBaUJ6QixDQUFNLENBQ1gsMklBQTZFLENBQzdFLDZEQUFDLDJEQUFNLEVBQUMsT0FBTyxDQUFDLFFBQVEsRUFDMUIsNkRBQUMseURBQUksRUFBQyxJQUFJLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQ3ZDLDRGQUNxQixpRkFBa0IsYUFBVSxHQUFHLENBQ2xELDZEQUFDLHlEQUFJLEVBQUMsRUFBRSxDQUFDLCtCQUErQixDQUFDLE9BQU8sQ0FBQyxNQUFNLHlDQUVoRCxDQUFDLEdBQUcsc0JBRVQsQ0FDQyxDQUNQLDZEQUFDLHlEQUFJLEVBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUNqQywrRkFDeUIsR0FBRyxDQUMxQiw2REFBQyx5REFBSSxFQUFDLEVBQUUsQ0FBQyw4QkFBOEIsQ0FBQyxPQUFPLENBQUMsTUFBTSxZQUFlLHVCQUNuRSxDQUNDLENBQ1AsNkRBQUMseURBQUksRUFBQyxJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQ3BDLDJGQUNvQiw4RUFBZSwyQ0FBd0MsR0FBRyxDQUM1RSw2REFBQyx5REFBSSxFQUFDLEVBQUUsQ0FBQyxxQkFBcUIsQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUMzQywrRUFBZ0IsQ0FDWCxDQUFDLEdBQUcsd0NBRVQsQ0FDQyxDQUNQLDZEQUFDLHlEQUFJLEVBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQzFDLGdHQUN5QixpRkFBa0IsK0JBQTRCLEdBQUcsQ0FDeEUsNkRBQUMseURBQUksRUFBQyxFQUFFLENBQUMsOEJBQThCLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFDcEQsNkZBQThCLENBQ3pCLGtCQUNPLGdGQUFpQiwwREFDNUIsNkRBQUMseURBQUksRUFBQyxFQUFFLENBQUMsaUNBQWlDLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFDMUQsK0ZBQXNDLENBQ2pDLEtBQ0wsQ0FDSixrSUFDNEQsR0FBRyxDQUM3RCwrRkFBc0MseUNBRXBDLENBQ0MsQ0FDUCw2REFBQyx5REFBSSxFQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFDL0IsZ0hBQzBDLEdBQUcsQ0FDM0MsNkRBQUMseURBQUksRUFBQyxFQUFFLENBQUMsNEJBQTRCLENBQUMsT0FBTyxDQUFDLE1BQU0sc0JBQXlCLEtBQzNFLENBQ0MsQ0FDUCw2REFBQyx5REFBSSxFQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFDNUIsa0hBQzRDLEdBQUcsQ0FDN0MsNkRBQUMseURBQUksRUFBQyxFQUFFLENBQUMsK0JBQStCLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFDckQseUZBQTBCLENBQ3JCLENBQUMsR0FBRyx3R0FHVCxDQUNDLENBQ1AsNkRBQUMseURBQUksRUFBQyxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQ2pDLHdMQUUwQyxHQUFHLENBQzNDLDZEQUFDLHlEQUFJLEVBQUMsRUFBRSxDQUFDLDRCQUE0QixDQUFDLE9BQU8sQ0FBQyxNQUFNLFVBQWEsS0FDL0QsQ0FDSiwyUEFJSSxDQUNKLG1GQUFpQixDQUNqQiw2REFBQyw2Q0FBRSxFQUFDLE9BQU8sQ0FBQyxJQUFJLDhDQUFtRCxDQUNuRSw2REFBQywyREFBTSxFQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQ3RCLDZEQUFDLHlEQUFJLEVBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsTUFBTSxrQ0FBcUMsQ0FDMUUsNkRBQUMseURBQUksRUFBQyxJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQ3JDLG9JQUM4RCxHQUFHLENBQy9ELDZGQUE4Qiw2TEFJNUIsQ0FDSix5SEFDa0QsbUZBQW9CLENBQUMsR0FBRyxvRUFFdEUsQ0FDSiw2REFBQyw2Q0FBRSxFQUFDLE9BQU8sQ0FBQyxJQUFJLDRrQkFnQjhDLENBQUMsR0FBRyxDQUNsRSxzSUFDZ0UsR0FBRyxDQUNqRSw2RkFBOEIsMERBRTVCLENBQUMsR0FBRyxDQUNSLDZEQUFDLDZDQUFFLEVBQUMsT0FBTyxDQUFDLElBQUksdUVBQTRFLENBQ3ZGLENBQ1AsNkRBQUMseURBQUksRUFBQyxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxNQUFNLFlBQzFCLHFGQUFzQix3RkFFeEIsQ0FDQSxDQUNKLENBQ1AsNkRBQUMseURBQUksRUFBQyxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQ25DLHFGQUNjLDZEQUFDLHlEQUFJLEVBQUMsRUFBRSxDQUFDLGlCQUFpQixDQUFDLE9BQU8sQ0FBQyxNQUFNLFVBQWEsd0JBQXFCLEdBQUcsQ0FDMUYsNkRBQUMseURBQUksRUFBQyxFQUFFLENBQUMsZ0NBQWdDLENBQUMsT0FBTyxDQUFDLE1BQU0sMEJBQTZCLEtBQ25GLENBQ0osaUZBQ1csR0FBRyxDQUNaLDZEQUFDLHlEQUFJLEVBQUMsRUFBRSxDQUFDLDZCQUE2QixDQUFDLE9BQU8sQ0FBQyxNQUFNLHlCQUE0QixLQUMvRSxDQUNDLENBQ1AsNkRBQUMseURBQUksRUFBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQzdCLDRGQUNxQixpRkFBa0IsaURBRW5DLENBQ0osNkVBQ00sNkRBQUMseURBQUksRUFBQyxFQUFFLENBQUMsb0JBQW9CLENBQUMsT0FBTyxDQUFDLE1BQU0sa0JBQXFCLEtBQ25FLENBQ0MsQ0FDSSxDQUNULG1FQUNFLElBQUksQ0FBRSxVQUFVLGFBQ0UsQ0FDcEIsdUVBQ0UsbUVBQUksVUFBVSxDQUFDLElBQUksRUFBQyxrRUFBRyxVQUFVLENBQUMsSUFBSSxDQUNsQyxNQUFNLENBQUUsOEJBQThCLCtCQUNILENBQUssQ0FDNUMsbUVBQUksVUFBVSxDQUFDLElBQUksRUFBQyxrRUFBRyxVQUFVLENBQUMsSUFBSSxDQUNsQyxNQUFNLENBQUUsc0JBQXNCLFNBQ3JCLDJFQUFZLFVBQVUsQ0FBQyxHQUFHLGNBQTJCLFVBQWMsQ0FBSyxDQUNyRixtRUFBSSxVQUFVLENBQUMsSUFBSSxFQUFDLGtFQUFHLFVBQVUsQ0FBQyxJQUFJLENBQ2xDLE1BQU0sQ0FBRSw4QkFBOEIsRUFDckMsMkVBQVksVUFBVSxDQUFDLEdBQUcsc0JBQW1DLENBQUksQ0FBSyxDQUMzRSxtRUFBSSxVQUFVLENBQUMsSUFBSSxFQUFDLGtFQUFHLFVBQVUsQ0FBQyxJQUFJLENBQ2xDLE1BQU0sQ0FBRSxpQ0FBaUMsRUFDeEMsMkVBQVksVUFBVSxDQUFDLEdBQUcsd0JBQXFDLENBQUksQ0FBSyxDQUMxRSxDQUNPLENBQ2hCLENBQ0EsQ0FDQUQsVUFBVSxDQUFDRyxjQUFjLENBQUcsSUFBSSIsInNvdXJjZXMiOlsid2VicGFjazovL3plZHV4LWRvY3MvLi9kb2NzL2FwaS90eXBlcy9FY29zeXN0ZW1Db25maWcubWR4PzAyOTgiXSwic291cmNlc0NvbnRlbnQiOlsiXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG4vKiBAanN4RnJhZyBSZWFjdC5GcmFnbWVudCAqL1xuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCc7XG5cblxuZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyID0ge1xuXHRpZDogJ0Vjb3N5c3RlbUNvbmZpZycsXG5cdHRpdGxlOiAnRWNvc3lzdGVtQ29uZmlnJ1xufTtcbmV4cG9ydCBjb25zdCBjb250ZW50VGl0bGUgPSB1bmRlZmluZWQ7XG5leHBvcnQgY29uc3QgbWV0YWRhdGEgPSB7XG4gIFwidW52ZXJzaW9uZWRJZFwiOiBcImFwaS90eXBlcy9FY29zeXN0ZW1Db25maWdcIixcbiAgXCJpZFwiOiBcImFwaS90eXBlcy9FY29zeXN0ZW1Db25maWdcIixcbiAgXCJ0aXRsZVwiOiBcIkVjb3N5c3RlbUNvbmZpZ1wiLFxuICBcImRlc2NyaXB0aW9uXCI6IFwiVGhlIGNvbmZpZyBvYmplY3QgcGFzc2VkIHRvIHRoZSBjcmVhdGVFY29zeXN0ZW0oKSBmYWN0b3J5LlwiLFxuICBcInNvdXJjZVwiOiBcIkBzaXRlL2RvY3MvYXBpL3R5cGVzL0Vjb3N5c3RlbUNvbmZpZy5tZHhcIixcbiAgXCJzb3VyY2VEaXJOYW1lXCI6IFwiYXBpL3R5cGVzXCIsXG4gIFwic2x1Z1wiOiBcIi9hcGkvdHlwZXMvRWNvc3lzdGVtQ29uZmlnXCIsXG4gIFwicGVybWFsaW5rXCI6IFwiL3plZHV4L2RvY3MvYXBpL3R5cGVzL0Vjb3N5c3RlbUNvbmZpZ1wiLFxuICBcImRyYWZ0XCI6IGZhbHNlLFxuICBcImVkaXRVcmxcIjogXCJodHRwczovL2dpdGh1Yi5jb20vT21uaXN0YWMvemVkdXgvdHJlZS9tYXN0ZXIvZG9jcy9hcGkvdHlwZXMvRWNvc3lzdGVtQ29uZmlnLm1keFwiLFxuICBcInRhZ3NcIjogW10sXG4gIFwidmVyc2lvblwiOiBcImN1cnJlbnRcIixcbiAgXCJmcm9udE1hdHRlclwiOiB7XG4gICAgXCJpZFwiOiBcIkVjb3N5c3RlbUNvbmZpZ1wiLFxuICAgIFwidGl0bGVcIjogXCJFY29zeXN0ZW1Db25maWdcIlxuICB9LFxuICBcInNpZGViYXJcIjogXCJyZWFjdFwiLFxuICBcInByZXZpb3VzXCI6IHtcbiAgICBcInRpdGxlXCI6IFwiRGVwZW5kZW50Q2FsbGJhY2tcIixcbiAgICBcInBlcm1hbGlua1wiOiBcIi96ZWR1eC9kb2NzL2FwaS90eXBlcy9EZXBlbmRlbnRDYWxsYmFja1wiXG4gIH0sXG4gIFwibmV4dFwiOiB7XG4gICAgXCJ0aXRsZVwiOiBcIkV2YWx1YXRpb25SZWFzb25cIixcbiAgICBcInBlcm1hbGlua1wiOiBcIi96ZWR1eC9kb2NzL2FwaS90eXBlcy9FdmFsdWF0aW9uUmVhc29uXCJcbiAgfVxufTtcbmV4cG9ydCBjb25zdCBhc3NldHMgPSB7XG5cbn07XG5cbmltcG9ydCB7IExlZ2VuZCwgSXRlbSwgTGluaywgVGFicywgVHMsIHRhYjEsIHRhYjIgfSBmcm9tICdAc2l0ZS9zcmMvYWxsJ1xuZXhwb3J0IGNvbnN0IHRvYyA9IFt7XG4gIHZhbHVlOiAnRGVmaW5pdGlvbicsXG4gIGlkOiAnZGVmaW5pdGlvbicsXG4gIGxldmVsOiAyXG59LCB7XG4gIHZhbHVlOiAnU2VlIEFsc28nLFxuICBpZDogJ3NlZS1hbHNvJyxcbiAgbGV2ZWw6IDJcbn1dO1xuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgdG9jXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG5cbiAgICA8cD57YFRoZSBjb25maWcgb2JqZWN0IHBhc3NlZCB0byBgfTxhIHBhcmVudE5hbWU9XCJwXCIgey4uLntcbiAgICAgICAgXCJocmVmXCI6IFwiLi4vZmFjdG9yaWVzL2NyZWF0ZUVjb3N5c3RlbVwiXG4gICAgICB9fT57YHRoZSBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJhXCI+e2BjcmVhdGVFY29zeXN0ZW0oKWB9PC9pbmxpbmVDb2RlPntgIGZhY3RvcnlgfTwvYT57YC5gfTwvcD5cbiAgICA8aDIgey4uLntcbiAgICAgIFwiaWRcIjogXCJkZWZpbml0aW9uXCJcbiAgICB9fT57YERlZmluaXRpb25gfTwvaDI+XG4gICAgPHByZT48Y29kZSBwYXJlbnROYW1lPVwicHJlXCIgey4uLntcbiAgICAgICAgXCJjbGFzc05hbWVcIjogXCJsYW5ndWFnZS10c1wiXG4gICAgICB9fT57YGludGVyZmFjZSBFY29zeXN0ZW1Db25maWc8XG4gIENvbnRleHQgZXh0ZW5kcyBSZWNvcmQ8c3RyaW5nLCBhbnk+IHwgdW5kZWZpbmVkID0gYW55XG4+IHtcbiAgY29tcGxleFBhcmFtcz86IGJvb2xlYW5cbiAgY29udGV4dD86IENvbnRleHRcbiAgZGVmYXVsdFR0bD86IG51bWJlclxuICBkZXN0cm95T25Vbm1vdW50PzogYm9vbGVhblxuICBmbGFncz86IHN0cmluZ1tdXG4gIGlkPzogc3RyaW5nXG4gIG9uUmVhZHk/OiAoXG4gICAgZWNvc3lzdGVtOiBFY29zeXN0ZW08Q29udGV4dD4sXG4gICAgcHJldkNvbnRleHQ/OiBDb250ZXh0XG4gICkgPT4gTWF5YmVDbGVhbnVwXG4gIG92ZXJyaWRlcz86IEF0b21CYXNlPGFueSwgYW55W10sIGFueT5bXVxuICBzc3I/OiBib29sZWFuXG59XG5gfTwvY29kZT48L3ByZT5cbiAgICA8cD57YEFsbCBmaWVsZHMgYXJlIG9wdGlvbmFsLiBJdCBpcyByZWNvbW1lbmRlZCB0byBhdCBsZWFzdCBwYXNzIGFuIGlkLmB9PC9wPlxuICAgIDxMZWdlbmQgbWR4VHlwZT1cIkxlZ2VuZFwiPlxuICA8SXRlbSBuYW1lPVwiY29tcGxleFBhcmFtc1wiIG1keFR5cGU9XCJJdGVtXCI+XG4gICAgPHA+XG4gICAgICBBIGJvb2xlYW4uIERlZmF1bHQgPGNvZGU+ZmFsc2U8L2NvZGU+LiBXaGV0aGVyeycgJ31cbiAgICAgIDxMaW5rIHRvPVwiLi4vLi4vYWR2YW5jZWQvY29tcGxleC1wYXJhbXNcIiBtZHhUeXBlPVwiTGlua1wiPlxuICAgICAgICBcImNvbXBsZXhcIiBhdG9tIGFuZCBzZWxlY3RvciBwYXJhbXNcbiAgICAgIDwvTGluaz57JyAnfVxuICAgICAgc2hvdWxkIGJlIGFsbG93ZWQuXG4gICAgPC9wPlxuICA8L0l0ZW0+XG4gIDxJdGVtIG5hbWU9XCJjb250ZXh0XCIgbWR4VHlwZT1cIkl0ZW1cIj5cbiAgICA8cD5cbiAgICAgIEFuIG9iamVjdC4gVGhlIGluaXRpYWx7JyAnfVxuICAgICAgPExpbmsgdG89XCIuLi9jbGFzc2VzL0Vjb3N5c3RlbSNjb250ZXh0XCIgbWR4VHlwZT1cIkxpbmtcIj5jb250ZXh0PC9MaW5rPiBmb3IgdGhlIGVjb3N5c3RlbS5cbiAgICA8L3A+XG4gIDwvSXRlbT5cbiAgPEl0ZW0gbmFtZT1cImRlZmF1bHRUdGxcIiBtZHhUeXBlPVwiSXRlbVwiPlxuICAgIDxwPlxuICAgICAgQSBudW1iZXIuIERlZmF1bHQgPGNvZGU+LTE8L2NvZGU+IChtZWFuaW5nIGluZmluaXRlKS4gV2lsbCBiZSBzZXQgYXMgdGhleycgJ31cbiAgICAgIDxMaW5rIHRvPVwiLi4vY2xhc3Nlcy9BdG9tI3R0bFwiIG1keFR5cGU9XCJMaW5rXCI+XG4gICAgICAgIDxjb2RlPnR0bDwvY29kZT5cbiAgICAgIDwvTGluaz57JyAnfVxuICAgICAgb3IgYWxsIGF0b21zIHRoYXQgZG9uJ3Qgc3BlY2lmeSBvbmUuXG4gICAgPC9wPlxuICA8L0l0ZW0+XG4gIDxJdGVtIG5hbWU9XCJkZXN0cm95T25Vbm1vdW50XCIgbWR4VHlwZT1cIkl0ZW1cIj5cbiAgICA8cD5cbiAgICAgIEEgYm9vbGVhbi4gRGVmYXVsdHMgdG8gPGNvZGU+ZmFsc2U8L2NvZGU+IGZvciBlY29zeXN0ZW1zIGNyZWF0ZWQgdmlheycgJ31cbiAgICAgIDxMaW5rIHRvPVwiLi4vZmFjdG9yaWVzL2NyZWF0ZUVjb3N5c3RlbVwiIG1keFR5cGU9XCJMaW5rXCI+XG4gICAgICAgIDxjb2RlPmNyZWF0ZUVjb3N5c3RlbSgpPC9jb2RlPlxuICAgICAgPC9MaW5rPlxuICAgICAgLiBEZWZhdWx0cyB0byA8Y29kZT50cnVlPC9jb2RlPiBmb3IgZWNvc3lzdGVtcyBjcmVhdGVkIGF1dG9tYXRpY2FsbHkgYnkgcmVuZGVyaW5nXG4gICAgICBhbiA8TGluayB0bz1cIi4uL2NvbXBvbmVudHMvRWNvc3lzdGVtUHJvdmlkZXJcIiBtZHhUeXBlPVwiTGlua1wiPlxuICAgICAgICA8Y29kZT4mbHQ7RWNvc3lzdGVtUHJvdmlkZXImZ3Q7PC9jb2RlPlxuICAgICAgPC9MaW5rPi5cbiAgICA8L3A+XG4gICAgPHA+XG4gICAgICBXaGV0aGVyIHRoZSBlY29zeXN0ZW0gc2hvdWxkIGRlc3Ryb3kgaXRzZWxmIHdoZW4gaXRzIGxhc3R7JyAnfVxuICAgICAgPGNvZGU+Jmx0O0Vjb3N5c3RlbVByb3ZpZGVyJmd0OzwvY29kZT4gdW5tb3VudHMuIENhbiBiZSB1c2VmdWwgZm9yXG4gICAgICB0ZXN0aW5nLlxuICAgIDwvcD5cbiAgPC9JdGVtPlxuICA8SXRlbSBuYW1lPVwiZmxhZ3NcIiBtZHhUeXBlPVwiSXRlbVwiPlxuICAgIDxwPlxuICAgICAgQW4gYXJyYXkgb2Ygc3RyaW5ncy4gV2lsbCBiZSBzZXQgYXMgdGhleycgJ31cbiAgICAgIDxMaW5rIHRvPVwiLi4vY2xhc3Nlcy9FY29zeXN0ZW0jZmxhZ3NcIiBtZHhUeXBlPVwiTGlua1wiPmVjb3N5c3RlbSdzIGZsYWdzPC9MaW5rPi5cbiAgICA8L3A+XG4gIDwvSXRlbT5cbiAgPEl0ZW0gbmFtZT1cImlkXCIgbWR4VHlwZT1cIkl0ZW1cIj5cbiAgICA8cD5cbiAgICAgIEEgc3RyaW5nLiBJZGVudGlmaWVzIHRoZSBlY29zeXN0ZW0gaW4gdGhleycgJ31cbiAgICAgIDxMaW5rIHRvPVwiLi4vdXRpbHMvaW50ZXJuYWwtc3RvcmUtdXRpbHNcIiBtZHhUeXBlPVwiTGlua1wiPlxuICAgICAgICA8Y29kZT5pbnRlcm5hbFN0b3JlPC9jb2RlPlxuICAgICAgPC9MaW5rPnsnICd9XG4gICAgICBhbmQgaW4gZGV2IHRvb2xzLiBJZiBubyBpZCBpcyBzcGVjaWZpZWQgd2hlbiBjcmVhdGluZyB0aGUgZWNvc3lzdGVtLCBvbmVcbiAgICAgIHdpbGwgYmUgZ2VuZXJhdGVkIHJhbmRvbWx5LlxuICAgIDwvcD5cbiAgPC9JdGVtPlxuICA8SXRlbSBuYW1lPVwib25SZWFkeVwiIG1keFR5cGU9XCJJdGVtXCI+XG4gICAgPHA+XG4gICAgICBBIGZ1bmN0aW9uLiBXaWxsIGJlIGNhbGxlZCBhcyBzb29uIGFzIHRoZSBlY29zeXN0ZW0gaGFzIGluaXRpYWxpemVkLiBJc1xuICAgICAgYWxzbyBjYWxsZWQgZXZlcnkgdGltZSB0aGUgZWNvc3lzdGVtIGlzeycgJ31cbiAgICAgIDxMaW5rIHRvPVwiLi4vY2xhc3Nlcy9FY29zeXN0ZW0jcmVzZXRcIiBtZHhUeXBlPVwiTGlua1wiPnJlc2V0PC9MaW5rPi5cbiAgICA8L3A+XG4gICAgPHA+XG4gICAgICBUaGlzIGlzIHRoZSBpZGVhbCBwbGFjZSB0byBib290c3RyYXAgZGF0YSBhbmQgcHJlbG9hZCBhdG9tcy4gU2luY2UgdGhpc1xuICAgICAgZnVuY3Rpb24gaXMgY2FsbGVkIG9uIHJlc2V0LCBpdCBjYW4gYmUgdXNlZCB0byBlbnN1cmUgdGhlIGVjb3N5c3RlbSdzXG4gICAgICBcIm5lY2Vzc2FyeSBkYXRhXCIgaXMgYWx3YXlzIGxvYWRlZC5cbiAgICA8L3A+XG4gICAgPHA+U2lnbmF0dXJlOjwvcD5cbiAgICA8VHMgbWR4VHlwZT1cIlRzXCI+e2AoZWNvc3lzdGVtLCBwcmV2Q29udGV4dD8pID0+IG1heWJlQ2xlYW51cGB9PC9Ucz5cbiAgICA8TGVnZW5kIG1keFR5cGU9XCJMZWdlbmRcIj5cbiAgICAgIDxJdGVtIG5hbWU9XCJlY29zeXN0ZW1cIiBtZHhUeXBlPVwiSXRlbVwiPkEgcmVmZXJlbmNlIHRvIHRoaXMgZWNvc3lzdGVtPC9JdGVtPlxuICAgICAgPEl0ZW0gbmFtZT1cInByZXZDb250ZXh0XCIgbWR4VHlwZT1cIkl0ZW1cIj5cbiAgICAgICAgPHA+XG4gICAgICAgICAgQSByZWZlcmVuY2UgdG8gdGhlIHByZXZpb3VzIGNvbnRleHQgdmFsdWUgb2YgdGhlIGVjb3N5c3RlbS57JyAnfVxuICAgICAgICAgIDxjb2RlPmVjb3N5c3RlbS5yZXNldCgpPC9jb2RlPiBjYW4gYmUgb3B0aW9uYWxseSBnaXZlbiBhIG5ldyBjb250ZXh0XG4gICAgICAgICAgb2JqZWN0LiBJZiB0aGF0IGhhcHBlbnMsIHRoZSBlY29zeXN0ZW0ncyBjb250ZXh0IHdpbGwgYmUgdXBkYXRlZFxuICAgICAgICAgIGJlZm9yZSB0aGlzIGZ1bmN0aW9uIGlzIGNhbGxlZC4gU28gYSByZWZlcmVuY2UgdG8gdGhlIG9sZCBjb250ZXh0IGlzXG4gICAgICAgICAgcGFzc2VkIGhlcmUuXG4gICAgICAgIDwvcD5cbiAgICAgICAgPHA+XG4gICAgICAgICAgVGhpcyBwYXJhbWV0ZXIgd2lsbCBiZSB1bmRlZmluZWQgdGhlIGZpcnN0IHRpbWUgPGNvZGU+b25SZWFkeTwvY29kZT57JyAnfVxuICAgICAgICAgIHJ1bnMuIFRodXMgeW91IGNhbiB1c2UgdGhpcyB0byBjaGVjayBpZiB0aGlzIGlzIHRoZSBpbml0aWFsIHJ1bi5cbiAgICAgICAgPC9wPlxuICAgICAgICA8VHMgbWR4VHlwZT1cIlRzXCI+e2Bjb25zdCBlY29zeXN0ZW0gPSBjcmVhdGVFY29zeXN0ZW0oe1xuICBjb250ZXh0OiB7IHJlZHV4OiByZWR1eFN0b3JlIH0sXG4gIG9uUmVhZHk6IChlY29zeXN0ZW0sIHByZXZDb250ZXh0KSA9PiB7XG4gICAgaWYgKCFwcmV2Q29udGV4dCkge1xuICAgICAgLy8gdGhpcyBpcyB0aGUgaW5pdGlhbCBydW5cbiAgICB9IGVsc2Uge1xuICAgICAgLy8gb25SZWFkeSBpcyBydW5uaW5nIGFmdGVyIGFuIGVjb3N5c3RlbSByZXNldFxuICAgICAgY29uc3QgbmV4dENvbnRleHQgPSBlY29zeXN0ZW0uY29udGV4dFxuICAgICAgXG4gICAgICBpZiAocHJldkNvbnRleHQucmVkdXggIT09IG5leHRDb250ZXh0LnJlZHV4KSB7XG4gICAgICAgIC8vIGVjb3N5c3RlbS5yZXNldCgpIGNoYW5nZWQgdGhlIHJlZHV4IHN0b3JlIHJlZmVyZW5jZVxuICAgICAgfVxuICAgIH1cbiAgfVxufSlcXG5cbmVjb3N5c3RlbS5yZXNldCgpIC8vIGRvZXNuJ3QgY2hhbmdlIGNvbnRleHQgKHByZXZDb250ZXh0ID09PSBlY29zeXN0ZW0uY29udGV4dClcbmVjb3N5c3RlbS5yZXNldCh7IHJlZHV4OiBvdGhlclJlZHV4U3RvcmUgfSkgLy8gcmVwbGFjZXMgY29udGV4dGB9PC9Ucz57JyAnfVxuICAgICAgICA8cD5cbiAgICAgICAgICBOb3RlIHRoYXQgcmVwbGFjaW5nIGNvbnRleHQgaXMgYW4gYWxsLW9yLW5vdGhpbmcgZGVhbC4gU3ByZWFkeycgJ31cbiAgICAgICAgICA8Y29kZT5lY29zeXN0ZW0uY29udGV4dDwvY29kZT4gaW50byBhIG5ldyBvYmplY3QgdG8gdXBkYXRlIG9ubHkgcGFydFxuICAgICAgICAgIG9mIHRoZSBjb250ZXh0OlxuICAgICAgICA8L3A+eycgJ31cbiAgICAgICAgPFRzIG1keFR5cGU9XCJUc1wiPntgZWNvc3lzdGVtLnJlc2V0KHsgLi4uZWNvc3lzdGVtLmNvbnRleHQsIHNwZWNpYWxGaWVsZDogJ25ldyB2YWwnIH0pYH08L1RzPlxuICAgICAgPC9JdGVtPlxuICAgICAgPEl0ZW0gbmFtZT1cIlJldHVybnNcIiBtZHhUeXBlPVwiSXRlbVwiPlxuICAgICAgICBFaXRoZXIgPGNvZGU+dW5kZWZpbmVkPC9jb2RlPiBvciBhIGNsZWFudXAgZnVuY3Rpb24gdGhhdCB3aWxsIGJlIGNhbGxlZFxuICAgICAgICB3aGVuIHRoZSBlY29zeXN0ZW0gaXMgcmVzZXQgb3IgZGVzdHJveWVkLlxuICAgICAgPC9JdGVtPlxuICAgIDwvTGVnZW5kPlxuICA8L0l0ZW0+XG4gIDxJdGVtIG5hbWU9XCJvdmVycmlkZXNcIiBtZHhUeXBlPVwiSXRlbVwiPlxuICAgIDxwPlxuICAgICAgQW4gYXJyYXkgb2YgPExpbmsgdG89XCIuLi9jbGFzc2VzL0F0b21cIiBtZHhUeXBlPVwiTGlua1wiPmF0b21zPC9MaW5rPi4gV2lsbCBiZSBzZXQgYXMgdGhleycgJ31cbiAgICAgIDxMaW5rIHRvPVwiLi4vY2xhc3Nlcy9FY29zeXN0ZW0jb3ZlcnJpZGVzXCIgbWR4VHlwZT1cIkxpbmtcIj5lY29zeXN0ZW0ncyBvdmVycmlkZXM8L0xpbms+LlxuICAgIDwvcD5cbiAgICA8cD5cbiAgICAgIFVzZWQgZm9yeycgJ31cbiAgICAgIDxMaW5rIHRvPVwiLi4vLi4vd2Fsa3Rocm91Z2gvb3ZlcnJpZGVzXCIgbWR4VHlwZT1cIkxpbmtcIj5EZXBlbmRlbmN5IEluamVjdGlvbjwvTGluaz4uXG4gICAgPC9wPlxuICA8L0l0ZW0+XG4gIDxJdGVtIG5hbWU9XCJzc3JcIiBtZHhUeXBlPVwiSXRlbVwiPlxuICAgIDxwPlxuICAgICAgQSBib29sZWFuLiBEZWZhdWx0IDxjb2RlPmZhbHNlPC9jb2RlPi4gVHVybnMgb24gU1NSIG1vZGUgZm9yIHRoZSBlbnRpcmVcbiAgICAgIGVjb3N5c3RlbS5cbiAgICA8L3A+XG4gICAgPHA+XG4gICAgICBTZWUgPExpbmsgdG89XCIuLi8uLi9hZHZhbmNlZC9zc3JcIiBtZHhUeXBlPVwiTGlua1wiPnRoZSBTU1IgZ3VpZGU8L0xpbms+LlxuICAgIDwvcD5cbiAgPC9JdGVtPlxuICAgIDwvTGVnZW5kPlxuICAgIDxoMiB7Li4ue1xuICAgICAgXCJpZFwiOiBcInNlZS1hbHNvXCJcbiAgICB9fT57YFNlZSBBbHNvYH08L2gyPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj48YSBwYXJlbnROYW1lPVwibGlcIiB7Li4ue1xuICAgICAgICAgIFwiaHJlZlwiOiBcIi4uLy4uL3dhbGt0aHJvdWdoL2Vjb3N5c3RlbXNcIlxuICAgICAgICB9fT57YFRoZSBFY29zeXN0ZW1zIHdhbGt0aHJvdWdoYH08L2E+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj48YSBwYXJlbnROYW1lPVwibGlcIiB7Li4ue1xuICAgICAgICAgIFwiaHJlZlwiOiBcIi4uL2NsYXNzZXMvRWNvc3lzdGVtXCJcbiAgICAgICAgfX0+e2BUaGUgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwiYVwiPntgRWNvc3lzdGVtYH08L2lubGluZUNvZGU+e2AgY2xhc3NgfTwvYT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPjxhIHBhcmVudE5hbWU9XCJsaVwiIHsuLi57XG4gICAgICAgICAgXCJocmVmXCI6IFwiLi4vZmFjdG9yaWVzL2NyZWF0ZUVjb3N5c3RlbVwiXG4gICAgICAgIH19PjxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJhXCI+e2BjcmVhdGVFY29zeXN0ZW0oKWB9PC9pbmxpbmVDb2RlPjwvYT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPjxhIHBhcmVudE5hbWU9XCJsaVwiIHsuLi57XG4gICAgICAgICAgXCJocmVmXCI6IFwiLi4vY29tcG9uZW50cy9FY29zeXN0ZW1Qcm92aWRlclwiXG4gICAgICAgIH19PjxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJhXCI+e2A8RWNvc3lzdGVtUHJvdmlkZXI+YH08L2lubGluZUNvZGU+PC9hPjwvbGk+XG4gICAgPC91bD5cbiAgICA8L01EWExheW91dD47XG59XG47XG5NRFhDb250ZW50LmlzTURYQ29tcG9uZW50ID0gdHJ1ZTtcbiJdLCJuYW1lcyI6WyJSZWFjdCIsIm1keCIsImZyb250TWF0dGVyIiwiaWQiLCJ0aXRsZSIsImNvbnRlbnRUaXRsZSIsInVuZGVmaW5lZCIsIm1ldGFkYXRhIiwiYXNzZXRzIiwiTGVnZW5kIiwiSXRlbSIsIkxpbmsiLCJUYWJzIiwiVHMiLCJ0YWIxIiwidGFiMiIsInRvYyIsInZhbHVlIiwibGV2ZWwiLCJsYXlvdXRQcm9wcyIsIk1EWExheW91dCIsIk1EWENvbnRlbnQiLCJjb21wb25lbnRzIiwicHJvcHMiLCJpc01EWENvbXBvbmVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1028\n')}}]);