"use strict";(self.webpackChunkzedux_docs=self.webpackChunkzedux_docs||[]).push([[8373],{8930:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return c},contentTitle:function(){return p},metadata:function(){return d},toc:function(){return s},default:function(){return u}});var n=a(3117),o=a(102),r=(a(7294),a(3905)),i=["components"],c={id:"Actor",title:"Actor"},p=void 0,d={unversionedId:"api/types/Actor",id:"api/types/Actor",isDocsHomePage:!1,title:"Actor",description:"The function returned from the createActor() factory.",source:"@site/docs/api/types/Actor.mdx",sourceDirName:"api/types",slug:"/api/types/Actor",permalink:"/zedux/docs/api/types/Actor",editUrl:"https://github.com/Omnistac/zedux/tree/master/docs/api/types/Actor.mdx",tags:[],version:"current",frontMatter:{id:"Actor",title:"Actor"},sidebar:"react",previous:{title:"ActionChain",permalink:"/zedux/docs/api/types/ActionChain"},next:{title:"AsyncStore",permalink:"/zedux/docs/api/types/AsyncStore"}},s=[{value:"Definition",id:"definition",children:[{value:"<code>payload</code>",id:"payload",children:[],level:3}],level:2},{value:"Example",id:"example",children:[],level:2}],l={toc:s};function u(e){var t=e.components,a=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,n.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The function returned from ",(0,r.kt)("a",{parentName:"p",href:"../factories/createActor"},"the ",(0,r.kt)("inlineCode",{parentName:"a"},"createActor()")," factory"),"."),(0,r.kt)("p",null,'An "actor" is just a fancy "action creator" function that has a ',(0,r.kt)("inlineCode",{parentName:"p"},".type")," property."),(0,r.kt)("h2",{id:"definition"},"Definition"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"type Actor = { type: string } & (payload?) => Action\n")),(0,r.kt)("p",null,"Returns an ",(0,r.kt)("a",{parentName:"p",href:"Action"},"action object")," for ",(0,r.kt)("a",{parentName:"p",href:"../classes/Store#dispatch"},"dispatching")," to ",(0,r.kt)("a",{parentName:"p",href:"../classes/Store"},"stores"),"."),(0,r.kt)("h3",{id:"payload"},(0,r.kt)("inlineCode",{parentName:"h3"},"payload")),(0,r.kt)("p",null,"Optional. For TS users, it will be required if a Payload generic was passed to ",(0,r.kt)("inlineCode",{parentName:"p"},"createActor"),"."),(0,r.kt)("p",null,"This will be set as the ",(0,r.kt)("inlineCode",{parentName:"p"},"payload")," property of the returned action object."),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { createActor } from '@zedux/react'\n\ncreateActor('test')('payload') // { type: 'test', payload: 'payload' }\n\ninterface Todo {\n  text: string\n}\n\nconst addTodo = createActor<Todo>('todos/add')\n\nstore.dispatch(addTodo({ text: 'be awesome' }))\n")),(0,r.kt)("p",null,"You could manually create an actor:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const addTodo = payload => ({\n  type: addTodo.type,\n  payload\n})\n\naddTodo.type = 'addTodo'\n")),(0,r.kt)("p",null,"But just why."))}u.isMDXComponent=!0}}]);