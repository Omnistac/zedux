"use strict";(self.webpackChunkzedux_docs=self.webpackChunkzedux_docs||[]).push([[6793],{6140:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return d},default:function(){return u}});var a=n(3117),o=n(102),i=(n(7294),n(3905)),r=["components"],c={id:"Action",title:"Action"},p=void 0,s={unversionedId:"api/types/Action",id:"api/types/Action",isDocsHomePage:!1,title:"Action",description:"The objects ultimately dispatched to Zedux stores.",source:"@site/docs/api/types/Action.mdx",sourceDirName:"api/types",slug:"/api/types/Action",permalink:"/zedux/docs/api/types/Action",editUrl:"https://github.com/Omnistac/zedux/tree/master/docs/api/types/Action.mdx",tags:[],version:"current",frontMatter:{id:"Action",title:"Action"},sidebar:"react",previous:{title:"injectWhy",permalink:"/zedux/docs/api/injectors/injectWhy"},next:{title:"ActionChain",permalink:"/zedux/docs/api/types/ActionChain"}},d=[{value:"Definition",id:"definition",children:[],level:2},{value:"Examples",id:"examples",children:[],level:2},{value:"Creation",id:"creation",children:[],level:2}],l={toc:d};function u(e){var t=e.components,n=(0,o.Z)(e,r);return(0,i.kt)("wrapper",(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The objects ultimately dispatched to ",(0,i.kt)("a",{parentName:"p",href:"../classes/Store"},"Zedux stores"),"."),(0,i.kt)("p",null,"Actions can also be wrapped in ",(0,i.kt)("a",{parentName:"p",href:"ActionChain"},"ActionChains"),", which can contain additional metadata. Zedux uses this pattern internally for its ",(0,i.kt)("a",{parentName:"p",href:"/not-done"},"store composition model"),"."),(0,i.kt)("h2",{id:"definition"},"Definition"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface Action<\n  Payload = any,\n  Type extends string = string,\n  Meta = any\n> {\n  meta?: Meta\n  payload?: Payload\n  type: Type\n}\n")),(0,i.kt)("p",null,"Zedux actions must contain a string ",(0,i.kt)("inlineCode",{parentName:"p"},"type")," property and may contain optional ",(0,i.kt)("inlineCode",{parentName:"p"},"meta")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"payload")," properties."),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const normalAction: Action = {\n  type: 'todos/add',\n  payload: { text: 'be awesome' }\n}\n\nconst withMeta: Action = {\n  type: 'todos/add',\n  meta: {\n    dispatchedFrom: 'MyComponent'\n  }\n}\n\nconst typeOnly: Action = {\n  type: 'dropdown/toggle'\n}\n")),(0,i.kt)("h2",{id:"creation"},"Creation"),(0,i.kt)("p",null,"Zedux provides high-level APIs for action creation. You typically won't create action objects manually."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { createActor } from '@zedux/react'\n\ncreateActor('test')('payload') // { type: 'test', payload: 'payload' }\n\nconst addTodo = createActor<Todo>('todos/add')\n\nstore.dispatch(addTodo({ text: 'be awesome' }))\n")),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"../factories/createActor"},(0,i.kt)("inlineCode",{parentName:"a"},"createActor()")),"."))}u.isMDXComponent=!0}}]);